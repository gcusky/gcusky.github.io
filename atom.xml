<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GCUSKY_SPACE</title>
  <subtitle>云山自清，青水自流。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.gcusky.com/"/>
  <updated>2016-05-02T08:39:17.818Z</updated>
  <id>http://www.gcusky.com/</id>
  
  <author>
    <name>GCUSKY</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>面向对象设计原则</title>
    <link href="http://www.gcusky.com/2016/05/02/DesignPattern-2/"/>
    <id>http://www.gcusky.com/2016/05/02/DesignPattern-2/</id>
    <published>2016-05-02T08:23:45.000Z</published>
    <updated>2016-05-02T08:39:17.818Z</updated>
    
    <content type="html">&lt;p&gt;面向对象设计原则是学习设计模式的基础，每一种设计模式都符合某一种或多种面向对象设计原则。通过在软件开发中使用这些原则可以提高软件的可维护性和可复用性，让我们可以设计出更加灵活也更容易扩展的软件系统，实现可维护性复用的目标。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;面向对象设计原则综述&quot;&gt;&lt;a href=&quot;#面向对象设计原则综述&quot; class=&quot;headerlink&quot; title=&quot;面向对象设计原则综述&quot;&gt;&lt;/a&gt;面向对象设计原则综述&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;设计原则名称&lt;/th&gt;
&lt;th&gt;设计原则简介&lt;/th&gt;
&lt;th&gt;重要性&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;单一职责原则&lt;br&gt;Single Responsibility Principle, SRP&lt;/td&gt;
&lt;td&gt;类的职责要单一，不能将太多的职责放在一个类中&lt;/td&gt;
&lt;td&gt;★★★★☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;开闭原则&lt;br&gt;Open-Closed Principle, OCP&lt;/td&gt;
&lt;td&gt;软件实体对扩展是开放的，但对修改是关闭的，即在不修改一个软件实体的基础上去扩展其功能&lt;/td&gt;
&lt;td&gt;★★★★★&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;里氏代换原则&lt;br&gt;Liskov Substitution Principle, LSP&lt;/td&gt;
&lt;td&gt;在软件系统中，一个可以接受基类对象的地方必然可以接受一个子类对象&lt;/td&gt;
&lt;td&gt;★★★★☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;依赖倒转原则&lt;br&gt;Dependence  Inversion Principle, DIP&lt;/td&gt;
&lt;td&gt;要针对抽象层编程，而不要针对具体类编程&lt;/td&gt;
&lt;td&gt;★★★★★&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;接口隔离原则&lt;br&gt;Interface Segregation Principle, ISP&lt;/td&gt;
&lt;td&gt;使用多个专门的接口来取代一个统一的接口&lt;/td&gt;
&lt;td&gt;★★☆☆☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;合成复用原则&lt;br&gt;Composite Reuse Principle, CRP&lt;/td&gt;
&lt;td&gt;在系统中应该尽量多使用组合和聚合关联关系，尽量少使用甚至不使用继承关系&lt;/td&gt;
&lt;td&gt;★★★★☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;迪米特法则&lt;br&gt;Law of Demeter, LoD&lt;/td&gt;
&lt;td&gt;一个软件实体对其他实体的引用越少越好，或者说如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用，而是通过引入一个第三者发生间接交互&lt;/td&gt;
&lt;td&gt;★★★☆☆&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;单一职责原则&quot;&gt;&lt;a href=&quot;#单一职责原则&quot; class=&quot;headerlink&quot; title=&quot;单一职责原则&quot;&gt;&lt;/a&gt;单一职责原则&lt;/h2&gt;&lt;h3 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一个对象应该只包含&lt;strong&gt;单一的职责&lt;/strong&gt;，并且该职责被完整地封装在一个类中。&lt;/li&gt;
&lt;li&gt;就一个类而言，应该&lt;strong&gt;仅有一个引起它变化的原因&lt;/strong&gt;。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一个类（或者大到模块，小到方法）承担的职责越多，它被复用的可能性越小。&lt;/li&gt;
&lt;li&gt;类的职责主要包括两个方面：数据职责和行为职责，&lt;strong&gt;数据职责&lt;/strong&gt;通过其&lt;strong&gt;属性&lt;/strong&gt;来体现，而&lt;strong&gt;行为职责&lt;/strong&gt;通过其&lt;strong&gt;方法&lt;/strong&gt;来体现。&lt;/li&gt;
&lt;li&gt;单一职责原则是实现&lt;strong&gt;高内聚、低耦合的指导方针&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;例子&quot;&gt;&lt;a href=&quot;#例子&quot; class=&quot;headerlink&quot; title=&quot;例子&quot;&gt;&lt;/a&gt;例子&lt;/h3&gt;&lt;p&gt;电话通话的时候有四个过程发生：拨号、通话、回应、挂机。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IPhone&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//拨通电话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dial&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String phoneNumber)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//通话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;chat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Object o)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//通话完毕，挂电话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hangup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当前 &lt;code&gt;IPhone&lt;/code&gt; 这个接口包含了两个职责：一个是协议管理，一个是数据传送。&lt;code&gt;dial()&lt;/code&gt; 和 &lt;code&gt;hangup()&lt;/code&gt; 两个方法实现的是协议管理，分别负责拨通和挂机；&lt;code&gt;chat()&lt;/code&gt; 实现的是数据传输，把我们说的话转换成模拟信号或数字信号传递到对方，然后再把对方传递过来的信号还原成我们听得懂的语言。而且这两个职责变化互不相关，那就考虑拆分成两个接口，类图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-02.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个类图完全满足了单一职责原则，但一个手机类要把 &lt;code&gt;ConnectionManager&lt;/code&gt; 和 &lt;code&gt;DataTransfer&lt;/code&gt; 组合在一起才能使用。组合是一种强耦关系，而且还增加了类的复杂性，多了两个类。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-03.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这样设计才是完美的，一个类实现了两个接口，把两个职责融合在一一个类中。虽然 &lt;code&gt;Phone&lt;/code&gt; 中有两个原因引起变化，但我们是面向接口编程【后面依赖倒置原则会提到】，我们对外公布的是接口不是实现类。而且如果真的要实现类的单一职责，这就必须使用上面的组合模式了，这会引起类间耦合过重、类的数量增加等问题，人为增加设计的复杂性。&lt;/p&gt;
&lt;h3 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;单一职责原则提出了一个编写程序的标准，用“职责”或“变化原因”来衡量接口或类设计得是否优良，但是“职责”和“变化原因”都是不可度量的，因项目而异，因环境而异。&lt;/li&gt;
&lt;li&gt;对于单一职责原则，建议是接口&lt;strong&gt;一定&lt;/strong&gt;要做到单一职责原则，类的设计&lt;strong&gt;尽量&lt;/strong&gt;做到只有一个原因引起变化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;里氏替换原则&quot;&gt;&lt;a href=&quot;#里氏替换原则&quot; class=&quot;headerlink&quot; title=&quot;里氏替换原则&quot;&gt;&lt;/a&gt;里氏替换原则&lt;/h2&gt;&lt;h3 id=&quot;定义-1&quot;&gt;&lt;a href=&quot;#定义-1&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如果对每一个类型为S的对象o1，都有类型为T的对象o2，使得以T定义的所有程序P在所有的对象o1都代换成o2时，程序P的行为没有变化，那么类型S是类型T的子类型。&lt;/li&gt;
&lt;li&gt;所有引用基类（父类）的地方必须能透明地使用其子类的对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分析-1&quot;&gt;&lt;a href=&quot;#分析-1&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;更通俗来讲&lt;strong&gt;子类可以扩展父类的功能，但不能改变父类原有的功能&lt;/strong&gt;。它包含以下4层含义：&lt;ul&gt;
&lt;li&gt;子类必须完全实现父类的方法&lt;/li&gt;
&lt;li&gt;子类可以拥有自己的个性【尽量避免】&lt;/li&gt;
&lt;li&gt;重载（Overload）或实现父类的方法时输入参数【前置条件】可以被放大【相同或者更加宽松】&lt;/li&gt;
&lt;li&gt;覆写（Override）或实现父类的方法时输出结果【后置条件】可以被缩小【范围值相同或更小】&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;助解类图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-04.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;例子-1&quot;&gt;&lt;a href=&quot;#例子-1&quot; class=&quot;headerlink&quot; title=&quot;例子&quot;&gt;&lt;/a&gt;例子&lt;/h3&gt;&lt;p&gt;我喜欢动物，那我一定喜欢狗，因为狗是动物的子类；但是我喜欢狗，不能据此断定我喜欢动物，因为我并不喜欢老鼠，虽然它也是动物。&lt;/p&gt;
&lt;h3 id=&quot;注意-1&quot;&gt;&lt;a href=&quot;#注意-1&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在类中调用其它类时务必要使用父类或接口，如果不能使用父类或接口，则说明类的设计已经违背了LSP原则。&lt;/li&gt;
&lt;li&gt;如果子类不能完整地实现父类的方法，或者父类的某些方法在子类中已经发生“畸变”，则建议断开父子继承关系，采用依赖、聚合、组合等关系代替继承。&lt;/li&gt;
&lt;li&gt;在项目中，采用里氏替换原则时，尽量避免子类的“个性”，一旦子类有“个性”，这个子类和父类之间的关系就很难调。把子类当做父类使用，子类的“个性”就会被抹杀；而把子类单独作为一个业务来使用，则会让代码间的耦合关系变得扑朔迷离 —— 缺乏类替换的标准。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;依赖倒转原则&quot;&gt;&lt;a href=&quot;#依赖倒转原则&quot; class=&quot;headerlink&quot; title=&quot;依赖倒转原则&quot;&gt;&lt;/a&gt;依赖倒转原则&lt;/h2&gt;&lt;h3 id=&quot;定义-2&quot;&gt;&lt;a href=&quot;#定义-2&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;高层模块&lt;/strong&gt;不应该依赖低层模块，它们都应该依赖抽象。&lt;strong&gt;抽象&lt;/strong&gt;不应该依赖于细节，&lt;strong&gt;细节&lt;/strong&gt;应该依赖于抽象。&lt;/li&gt;
&lt;li&gt;要针对接口编程，不要针对实现编程。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分析-2&quot;&gt;&lt;a href=&quot;#分析-2&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;简单来说，依赖倒转原则就是指：&lt;strong&gt;代码要依赖于抽象的类，而不要依赖于具体的类；要针对接口或抽象类编程，而不是针对具体类编程&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;在实现依赖倒转原则时，我们需要针对抽象层编程，而将具体类的对象通过&lt;strong&gt;依赖注入(DependencyInjection, DI)&lt;/strong&gt;的方式注入到其他对象中：&lt;ul&gt;
&lt;li&gt;构造注入(Constructor Injection)：通过构造函数注入实例变量。 &lt;/li&gt;
&lt;li&gt;设值注入(Setter Injection)：通过Setter方法注入实例变量。 &lt;/li&gt;
&lt;li&gt;接口注入(Interface Injection)：通过接口方法注入实例变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;例子-2&quot;&gt;&lt;a href=&quot;#例子-2&quot; class=&quot;headerlink&quot; title=&quot;例子&quot;&gt;&lt;/a&gt;例子&lt;/h3&gt;&lt;p&gt;参考 &lt;strong&gt;单一职责原则&lt;/strong&gt; 例子。&lt;/p&gt;
&lt;h3 id=&quot;注意-2&quot;&gt;&lt;a href=&quot;#注意-2&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;每个类&lt;strong&gt;尽量&lt;/strong&gt;有接口或抽象类，或者抽象类和接口两者具备。&lt;br&gt;【尽量而已，如一些工具类xxxUtils不需要接口或抽象类】&lt;/li&gt;
&lt;li&gt;变量的表面类型尽量是接口或抽象类。&lt;br&gt;【表面类型是在定义的时候赋予的类型，实际类型是对象的类型】&lt;/li&gt;
&lt;li&gt;任何类都不应该从具体类派生。&lt;br&gt;【有时设计缺陷在所难免，因此只要不超过两层的继承都是可以忍受的】&lt;/li&gt;
&lt;li&gt;尽量不要覆写基类的方法&lt;br&gt;【如果基类是一个抽象类，而且这个方法已经实现了，子类尽量不要覆写；类间依赖的是抽象，覆写了抽象方法，对依赖的稳定性会产生一定的影响】&lt;/li&gt;
&lt;li&gt;结合里氏替换原则使用&lt;br&gt;【接口负责定义 public 属性和方法，并且声明与其他对象的依赖关系，抽象类负责公共构造部分的实现。实现类准确的实现业务逻辑，同时在适当的时候对父类进行细化】&lt;/li&gt;
&lt;li&gt;在项目中，只要记得&lt;strong&gt;“面向接口编程”&lt;/strong&gt;就基本上掌握了依赖倒置原则的核心。&lt;/li&gt;
&lt;li&gt;在现实中也存在必须依赖细节的事物，具体问题具体分析。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;接口隔离原则&quot;&gt;&lt;a href=&quot;#接口隔离原则&quot; class=&quot;headerlink&quot; title=&quot;接口隔离原则&quot;&gt;&lt;/a&gt;接口隔离原则&lt;/h2&gt;&lt;h3 id=&quot;定义-3&quot;&gt;&lt;a href=&quot;#定义-3&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;客户端&lt;strong&gt;不应该依赖&lt;/strong&gt;那些它&lt;strong&gt;不需要的接口&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;一旦一个&lt;strong&gt;接口太大&lt;/strong&gt;，则需要将它&lt;strong&gt;分割成一些更细小的接口&lt;/strong&gt;，使用该接口的客户端仅需知道与之相关的方法即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分析-3&quot;&gt;&lt;a href=&quot;#分析-3&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用接口隔离原则拆分接口时，首先必须满足&lt;strong&gt;单一职责原则&lt;/strong&gt;，将一组相关的操作定义在一个接口中，且在满足高内聚的前提下，接口中的方法越少越好。&lt;/li&gt;
&lt;li&gt;可以在进行系统设计时采用&lt;strong&gt;定制服务&lt;/strong&gt;的方式，即&lt;strong&gt;为不同的客户端提供宽窄不同的接口&lt;/strong&gt;，只提供用户需要的行为，而隐藏用户不需要的行为。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;例子-3&quot;&gt;&lt;a href=&quot;#例子-3&quot; class=&quot;headerlink&quot; title=&quot;例子&quot;&gt;&lt;/a&gt;例子&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;胖接口原始类图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-05.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;胖接口细化后的系统类图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-06.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;注意-3&quot;&gt;&lt;a href=&quot;#注意-3&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;保证接口的纯洁性&lt;ol&gt;
&lt;li&gt;接口要尽量小【“小”是有限度的，根据接口隔离原则拆分接口时，首先必须满足单一职责原则】&lt;/li&gt;
&lt;li&gt;接口要高内聚【高内聚就是提高接口、类、模块的处理能力，减少对外的交互；具体到接口隔离原则就是，要求在接口中少公布 public 方法，接口是对外的承诺，承诺越少对系统开发越有利，变更的风险也就越少，同时利于降低成本】&lt;/li&gt;
&lt;li&gt;定制服务【定制服务就是单独为一个个体提供优良服务：只提供访问者需要的方法】&lt;/li&gt;
&lt;li&gt;接口的设计是有限度的【接口的设计粒度越小，系统越灵活但结构会出现复杂化，开发难度增加，可维护性降低】&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;已经被污染的接口，尽量去修复；若变更的风险较大，则采用适配器模式进行转化处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;迪米特法则&quot;&gt;&lt;a href=&quot;#迪米特法则&quot; class=&quot;headerlink&quot; title=&quot;迪米特法则&quot;&gt;&lt;/a&gt;迪米特法则&lt;/h2&gt;&lt;h3 id=&quot;定义-4&quot;&gt;&lt;a href=&quot;#定义-4&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;不要和“陌生人”说话。&lt;/li&gt;
&lt;li&gt;只与你的直接朋友通信。&lt;/li&gt;
&lt;li&gt;每一个软件单位对其他的单位都只有最少的知识，而且局限于那些与本单位密切相关的软件单位。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分析-4&quot;&gt;&lt;a href=&quot;#分析-4&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在迪米特法则中，对于一个对象，其朋友包括以下几类：&lt;ol&gt;
&lt;li&gt;当前对象本身(this)；&lt;/li&gt;
&lt;li&gt;以参数形式传入到当前对象方法中的对象；&lt;/li&gt;
&lt;li&gt;当前对象的成员对象；&lt;/li&gt;
&lt;li&gt;如果当前对象的成员对象是一个集合，那么集合中的元素也都是朋友；&lt;/li&gt;
&lt;li&gt;当前对象所创建的对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;任何一个对象，如果满足上面的条件之一，就是当前对象的“朋友”，否则就是“陌生人”。&lt;/li&gt;
&lt;li&gt;迪米特法则可分为狭义法则和广义法则。在狭义的迪米特法则中，如果两个类之间不必彼此直接通信，那么这两个类就不应当发生直接的相互作用，如果其中的一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。 &lt;ol&gt;
&lt;li&gt;&lt;strong&gt;狭义的迪米特法则&lt;/strong&gt;：可以&lt;strong&gt;降低类之间的耦合&lt;/strong&gt;，但是会在系统中增加大量的小方法并散落在系统的各个角落，它可以使一个系统的局部设计简化，因为每一个局部都不会和远距离的对象有直接的关联，但是也会&lt;strong&gt;造成系统的不同模块之间的通信效率降低&lt;/strong&gt;，使得系统的不同模块之间不容易协调。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;广义的迪米特法则&lt;/strong&gt;：&lt;strong&gt;指对对象之间的信息流量、流向以及信息的影响的控制，主要是对信息隐藏的控制&lt;/strong&gt;。信息的隐藏可以使各个子系统之间脱耦，从而允许它们独立地被开发、优化、使用和修改，同时可以促进软件的复用，由于每一个模块都不依赖于其他模块而存在，因此每一个模块都可以独立地在其他的地方使用。一个系统的规模越大，信息的隐藏就越重要，而信息隐藏的重要性也就越明显。 &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;迪米特法则的主要用途在于&lt;strong&gt;控制信息的过载&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;在类的划分上，应当尽量创建松耦合的类，类之间的耦合度越低，就越有利于复用，一个处在松耦合中的类一旦被修改，不会对关联的类造成太大波及；&lt;/li&gt;
&lt;li&gt;在类的结构设计上，每一个类都应当尽量降低其成员变量和成员函数的访问权限；&lt;/li&gt;
&lt;li&gt;在类的设计上，只要有可能，一个类型应当设计成不变类；&lt;/li&gt;
&lt;li&gt;在对其他类的引用上，一个对象对其他对象的引用应当降到最低。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;例子-4&quot;&gt;&lt;a href=&quot;#例子-4&quot; class=&quot;headerlink&quot; title=&quot;例子&quot;&gt;&lt;/a&gt;例子&lt;/h3&gt;&lt;p&gt;某系统界面类（如Form1、Form2等类）与数据访问类（如DAO1、DAO2等类）之间的调用关系较为复杂，如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-07.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用迪米特法则之后：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-08.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;注意-4&quot;&gt;&lt;a href=&quot;#注意-4&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;类与类之间的关系是建立在类间的，而不是方法间，因此一个方法尽量不引入一个类中不存在的对象。&lt;/li&gt;
&lt;li&gt;朋友类的定义：出现在成员变量、方法的输入输出参数中的类称为成员朋友类，而出现在方法体内部的类不属于朋友类。&lt;/li&gt;
&lt;li&gt;如果一个方法放在本类中，既不增加类间关系，也对本类不产生负面影响，那就放置在本类中。&lt;/li&gt;
&lt;li&gt;迪米特法则的核心观念就是类间解耦，弱耦合；只有弱耦合了以后，类的复用率才可以提高。其要求的结果就是产生了大量的中转或跳转类，导致系统的复杂性提高，同时也为维护带来了难度。所以在使用迪米特法则时需要反复权衡，既做到让结构清晰，又做到高内聚低耦合。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;开闭原则&quot;&gt;&lt;a href=&quot;#开闭原则&quot; class=&quot;headerlink&quot; title=&quot;开闭原则&quot;&gt;&lt;/a&gt;开闭原则&lt;/h2&gt;&lt;h3 id=&quot;定义-5&quot;&gt;&lt;a href=&quot;#定义-5&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一个软件实体应当&lt;strong&gt;对扩展开放，对修改关闭。&lt;/strong&gt;也就是说在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展，即实现在不修改源代码的情况下改变这个模块的行为。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分析-5&quot;&gt;&lt;a href=&quot;#分析-5&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在开闭原则的定义中，软件实体可以指一个软件模块、一个由多个类组成的局部结构或一个独立的类。&lt;/li&gt;
&lt;li&gt;抽象化是开闭原则的关键。 &lt;/li&gt;
&lt;li&gt;开闭原则还可以通过一个更加具体的“对可变性封装原则”来描述，对可变性封装原则（Principle of Encapsulation of Variation, EVP）要求找到系统的可变因素并将其封装起来。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;例子-5&quot;&gt;&lt;a href=&quot;#例子-5&quot; class=&quot;headerlink&quot; title=&quot;例子&quot;&gt;&lt;/a&gt;例子&lt;/h3&gt;&lt;p&gt;某图形界面系统提供了各种不同形状的按钮，客户端代码可针对这些按钮进行编程，用户可能会改变需求要求使用不同的按钮，原始设计方案如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-09.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;现对该系统进行重构，使之满足开闭原则的要求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-10.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;注意-5&quot;&gt;&lt;a href=&quot;#注意-5&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如何使用开闭原则：&lt;ol&gt;
&lt;li&gt;抽象约束：第一，通过接口或抽象类约束扩展，对扩展进行边界限定，不予许出现在接口或抽象类中不存在的public方法；第二，参数类型、引用对象尽量使用接口或者抽象类，而不是实现类；第三，抽象层尽量保持稳定，一旦确定即不允许修改。&lt;/li&gt;
&lt;li&gt;元数据（metadata）控制模块行为【元数据用来描述环境和数据的数据，简单来说就是配置参数】&lt;/li&gt;
&lt;li&gt;制定项目章程&lt;/li&gt;
&lt;li&gt;封装变化：第一，将相同的变化封装到一个接口或一个抽象类中；第二，将不同的变化封装到不同的接口或抽象类中，不应该有两个不同的变化出现在同一个接口或抽象类中。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;合成复用原则&quot;&gt;&lt;a href=&quot;#合成复用原则&quot; class=&quot;headerlink&quot; title=&quot;合成复用原则&quot;&gt;&lt;/a&gt;合成复用原则&lt;/h2&gt;&lt;h3 id=&quot;定义-6&quot;&gt;&lt;a href=&quot;#定义-6&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;尽量使用对象组合&lt;/strong&gt;，而&lt;strong&gt;不是继承&lt;/strong&gt;来达到复用的目的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分析-6&quot;&gt;&lt;a href=&quot;#分析-6&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在面向对象设计中，可以通过两种基本方法在不同的环境中复用已有的设计和实现，即通过&lt;strong&gt;组合/聚合关系&lt;/strong&gt;或通过&lt;strong&gt;继承&lt;/strong&gt;。&lt;ul&gt;
&lt;li&gt;继承复用：实现简单，易于扩展。破坏系统的封装性；从基类继承而来的实现是静态的，不可能在运行时发生改变，没有足够的灵活性；只能在有限的环境中使用。（“白箱”复用 ）&lt;/li&gt;
&lt;li&gt;组合/聚合复用：耦合度相对较低，选择性地调用成员对象的操作；可以在运行时动态进行。（“黑箱”复用 ）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;组合/聚合可以&lt;strong&gt;使系统更加灵活&lt;/strong&gt;，类与类之间的&lt;strong&gt;耦合度降低&lt;/strong&gt;，一个类的变化对其他类造成的影响相对较少，因此一般&lt;strong&gt;首选使用组合/聚合来实现复用&lt;/strong&gt;；其次才考虑继承，在使用继承时，需要严格遵循里氏代换原则，有效使用继承会有助于对问题的理解，降低复杂度，而滥用继承反而会增加系统构建和维护的难度以及系统的复杂度，因此需要&lt;strong&gt;慎重使用继承复用&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;例子-6&quot;&gt;&lt;a href=&quot;#例子-6&quot; class=&quot;headerlink&quot; title=&quot;例子&quot;&gt;&lt;/a&gt;例子&lt;/h3&gt;&lt;p&gt;某教学管理系统部分数据库访问类设计如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-11.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果需要更换数据库连接方式，如原来采用JDBC连接数据库，现在采用数据库连接池连接，则需要修改DBUtil类源代码。如果StudentDAO采用JDBC连接，但是TeacherDAO采用连接池连接，则需要增加一个新的DBUtil类，并修改StudentDAO或TeacherDAO的源代码，使之继承新的数据库连接类，这将违背开闭原则，系统扩展性较差。&lt;br&gt;现使用合成复用原则对其进行重构。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/umloo-12.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;注意-6&quot;&gt;&lt;a href=&quot;#注意-6&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;只有当以下的条件全部被满足时，才应当使用继承关系。&lt;ol&gt;
&lt;li&gt;子类是超类的一个特殊种类，而不是超类的一个角色，也就是区分“Has-A”和“Is-A”.只有“Is-A”关系才符合继承关系，“Has-A”关系应当使用聚合来描述。&lt;/li&gt;
&lt;li&gt;永远不会出现需要将子类换成另外一个类的子类的情况。如果不能肯定将来是否会变成另外一个子类的话，就不要使用继承。&lt;/li&gt;
&lt;li&gt;子类具有扩展超类的责任，而不是具有置换掉或注销掉超类的责任。如果一个子类需要大量的置换掉超类的行为，那么这个类就不应该是这个超类的子类。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://item.jd.com/10854678.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《设计模式》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://item.jd.com/11414555.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《设计模式之禅（第2版）》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;面向对象设计原则是学习设计模式的基础，每一种设计模式都符合某一种或多种面向对象设计原则。通过在软件开发中使用这些原则可以提高软件的可维护性和可复用性，让我们可以设计出更加灵活也更容易扩展的软件系统，实现可维护性复用的目标。&lt;/p&gt;
    
    </summary>
    
      <category term="设计模式" scheme="http://www.gcusky.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="面向对象设计原则" scheme="http://www.gcusky.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>英语基本构词法之转换法</title>
    <link href="http://www.gcusky.com/2016/05/01/english-4/"/>
    <id>http://www.gcusky.com/2016/05/01/english-4/</id>
    <published>2016-05-01T09:12:22.000Z</published>
    <updated>2016-05-01T09:16:10.982Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;英语的基本构词法主要包括词缀法、合成法、转换法。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一个词在没有词形变化的前提下可转换用作其他词类，如一个词既可以作名词，又可以作动词；或一个词既可以用作动词，也可以作名词。这种构词方式就是&lt;strong&gt;转换法&lt;/strong&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;转化词的构成&quot;&gt;&lt;a href=&quot;#转化词的构成&quot; class=&quot;headerlink&quot; title=&quot;转化词的构成&quot;&gt;&lt;/a&gt;转化词的构成&lt;/h2&gt;&lt;h3 id=&quot;动词转化成名词&quot;&gt;&lt;a href=&quot;#动词转化成名词&quot; class=&quot;headerlink&quot; title=&quot;动词转化成名词&quot;&gt;&lt;/a&gt;动词转化成名词&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;表示动词原来表示的动作或状态&lt;/strong&gt;，eg. attempt 尝试；eats 食物；laugh 大笑；smell 嗅觉；desire 愿望。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表示动作执行者&lt;/strong&gt;，eg. cheat 骗子；bore 惹人讨厌的人或物；home help 佣工。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表示结果&lt;/strong&gt;，eg. a find 发现物；a reply 复信；a spit 唾液；a catch 捕获物。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表示地点&lt;/strong&gt;，eg. a dump 堆垃圾的地方；a pass 关口；a turn 转弯处；a divide 分界线。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表示工具&lt;/strong&gt;，eg. a cover 盖子；a wrap 包裹物；a catch 门扣。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;名词转化成动词&quot;&gt;&lt;a href=&quot;#名词转化成动词&quot; class=&quot;headerlink&quot; title=&quot;名词转化成动词&quot;&gt;&lt;/a&gt;名词转化成动词&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;to put in/on（放入，装）&lt;/strong&gt;，eg. to cage 装进笼子；to garage 把（汽车）送入车库；to pocket 装进口袋。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;to give，to provide with（给予、提供）&lt;/strong&gt;，eg. to arm 武装；to shelter 掩护；to finance 提供财力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;to deprive of（去掉）&lt;/strong&gt;，eg. to core 挖去果心；to peel 削皮；to dust 去掉……上的灰尘。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;to……with（用……来做）&lt;/strong&gt;，eg. to brake 刹车；to hand 递交；to ete 注视；to shoulder 肩负。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;to be/act as……with respect to（像……那样……）&lt;/strong&gt;，eg. to ape 模仿；to father 像父亲般对待；to nurse 护理；to wolf 狼吞虎咽。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;to make/change into（把……变为）&lt;/strong&gt;，eg. to cash 兑成现金；to pile 把……剁成堆；to group 把……编成组。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;to send/go by（用……来送，乘……前往）&lt;/strong&gt;，eg. to motor 用汽车运送；to mall 邮寄；to boat 乘船。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;形容词转化成动词&quot;&gt;&lt;a href=&quot;#形容词转化成动词&quot; class=&quot;headerlink&quot; title=&quot;形容词转化成动词&quot;&gt;&lt;/a&gt;形容词转化成动词&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;由形容词转化而来的动词，其意义词意比较简单，&lt;strong&gt;多表示状态的变化&lt;/strong&gt;，可用作及物动词（to make……adjective），也可用作不及物动词（to become adjective）。&lt;ul&gt;
&lt;li&gt;narrow（a. 狭窄的）→ to narrow = to make……narrow（使……狭窄）= to become narrow（变得狭窄）&lt;/li&gt;
&lt;li&gt;dry（a. 干的）→ to dry = to make……dry（使……变干）= to become dry（变干）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有些形容词&lt;strong&gt;只能转化为及物动词&lt;/strong&gt;。&lt;ul&gt;
&lt;li&gt;bare（赤裸的）→ to bare（暴露）；blind（盲目的）→ to blind（使失明）；free（自由的）→ to free（释放）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有些形容词转化而来的动词表示&lt;strong&gt;以某种方式、姿态去做某事&lt;/strong&gt;。&lt;ul&gt;
&lt;li&gt;rough（粗糙的）由 to rough（粗暴地对待）；brave（勇敢的）→ to brave（冒着……；敢于……）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;形容词转化成名词&quot;&gt;&lt;a href=&quot;#形容词转化成名词&quot; class=&quot;headerlink&quot; title=&quot;形容词转化成名词&quot;&gt;&lt;/a&gt;形容词转化成名词&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;完全转化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完全转化的名词具有名词所有的特征，即可以变成复数，可以被形容词修饰，可以加 &lt;code&gt;&amp;#39;s&lt;/code&gt; 成为所有格等。&lt;/li&gt;
&lt;li&gt;crazy（疯子，生性怪僻的人）consumable（消耗品）gay（同性恋）disposable（用后被扔弃的瓶子、罐头等）nasty（讨厌的家伙、使人不愉快的事）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;部分转化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与完全转化的名词不同，部分转化的名词不具有名词的所有特点，其前面一般带有定冠词，作为复数表示一个整体。&lt;/li&gt;
&lt;li&gt;the handicapped（残疾人）the sick（病人）the rich（富人）the poor（穷人）the innocent（无辜者）the incredible（难以置信的人或事）&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;英语的基本构词法主要包括词缀法、合成法、转换法。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一个词在没有词形变化的前提下可转换用作其他词类，如一个词既可以作名词，又可以作动词；或一个词既可以用作动词，也可以作名词。这种构词方式就是&lt;strong&gt;转换法&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="英语" scheme="http://www.gcusky.com/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="读书笔记" scheme="http://www.gcusky.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>英语基本构词法之合成法</title>
    <link href="http://www.gcusky.com/2016/05/01/english-3/"/>
    <id>http://www.gcusky.com/2016/05/01/english-3/</id>
    <published>2016-05-01T08:32:05.000Z</published>
    <updated>2016-05-01T09:16:59.341Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;英语的基本构词法主要包括词缀法、合成法、转换法。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;合成法&lt;/strong&gt;，具体是指将两个或两个以上的词按一定的顺序组成在一起构成新词的方法。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;一般合成词组成部分之间的句法关系有以下几种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;主谓关系&lt;/strong&gt;：sunnse（日出）—— The sunnses。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动宾关系&lt;/strong&gt;：record-breaking（创纪录的）—— to break the record。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主宾关系&lt;/strong&gt;：gaslight（煤气灯）—— The gas produces light。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;限定关系&lt;/strong&gt;：compact disc（激光唱盘）French fries（炸薯条）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同位关系&lt;/strong&gt;：boyfriend（男朋友）—— The boy is a friend。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;并列关系&lt;/strong&gt;：face-to-face（面对面的）life-and-death（生死攸关的）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;关于合成词的书写，主要有以下几种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;合成词连写&lt;/strong&gt;：mailbox（信箱）basketball（蓝球）outbreak（爆发）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合成词间带有连字符&lt;/strong&gt;：laid-back（放松的、不慌不忙的）man-made（人造的）good-for-nothing（不中用的人）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合成词间分开&lt;/strong&gt;写：remote control（遥控）bird of prey（猛禽）point of view（观点）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;合成词的构成&quot;&gt;&lt;a href=&quot;#合成词的构成&quot; class=&quot;headerlink&quot; title=&quot;合成词的构成&quot;&gt;&lt;/a&gt;合成词的构成&lt;/h2&gt;&lt;h3 id=&quot;合成名词&quot;&gt;&lt;a href=&quot;#合成名词&quot; class=&quot;headerlink&quot; title=&quot;合成名词&quot;&gt;&lt;/a&gt;合成名词&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;名词+名词&lt;/strong&gt;，eg. clubfoot 畸形足；flowerpot 花盘；homework 家庭作业；girl friend 女朋友；hot days 暑天。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;名词+动词&lt;/strong&gt;，eg. daybreak 黎明；heartbeat 心搏；earthquake 地震。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动词+名词&lt;/strong&gt;，eg. haircut 理发；crybaby 爱哭的人；breakwater 防洪堤。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;形容词+名词&lt;/strong&gt;，eg. deadline 截止日期；blueprint 蓝图；black hole 黑洞。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;名词+&lt;code&gt;-ing&lt;/code&gt;&lt;/strong&gt;，eg. brainwashing 洗脑；handwriting 书法；sun-bathing 日光浴。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-ing&lt;/code&gt;+名词&lt;/strong&gt;，eg. cleaning lady 清洁女工；baking powder 发酵粉；chewing gum 口香糖。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;副词+名词&lt;/strong&gt;，eg. overburden 过重的负担；afterthought 事后想到的事物。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;副词+动词&lt;/strong&gt;，eg. downfall 垮台；onflow 滚滚向前；outbreak （暴力、疾病等坏事的）爆发。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;合成形容词&quot;&gt;&lt;a href=&quot;#合成形容词&quot; class=&quot;headerlink&quot; title=&quot;合成形容词&quot;&gt;&lt;/a&gt;合成形容词&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;名词+形容词&lt;/strong&gt;，eg. care-free 无忧无虑的；duty-free 免税的；homesick 想家的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;形容词+形容词&lt;/strong&gt;，eg. curly-haired 卷发的；bitter-sweet 又苦又乐的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数词+名词&lt;/strong&gt;，eg. ten-storey 十层的；first-class 一流的；five-star 五星级的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;名词+&lt;code&gt;-ing&lt;/code&gt;&lt;/strong&gt;，eg. peace-loving 爱好和平的；nine-saving 省时间的；ocean-going 远洋的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;形容词+&lt;code&gt;-ing&lt;/code&gt;&lt;/strong&gt;，eg. easy-going 随和的；ever-lasing 永恒的；far-reaching 深远的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-ing&lt;/code&gt;+形容词&lt;/strong&gt;，eg. freezing-cold 冰冷的；wringing-wet 湿得可拧出水来的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;副词+&lt;code&gt;-ing&lt;/code&gt;&lt;/strong&gt;，eg. hard-working 勤劳的；out-going 性格外向的；forthcoming 现成的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;名词+&lt;code&gt;-ed&lt;/code&gt;&lt;/strong&gt;，eg. book-filled 放满书的；hen-pecked 怕老婆的；air-conditioned 有空调的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;形容词/副词+&lt;code&gt;-ed&lt;/code&gt;&lt;/strong&gt;，eg. far-fetched 牵强附会的；good-tempered 脾气好的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;合成动词&quot;&gt;&lt;a href=&quot;#合成动词&quot; class=&quot;headerlink&quot; title=&quot;合成动词&quot;&gt;&lt;/a&gt;合成动词&lt;/h3&gt;&lt;p&gt;同合成名词和合成形容词一样，合成动词也可以直接由两个词组合而成如 test-drive（试车），但其主要组成方式是以合成名词和合成形容词为基础，采用词类转换或逆生法生成。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;运用词类转换生成动词&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;合成名词&lt;/th&gt;
&lt;th&gt;转化成合成动词&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;blueprint 蓝图&lt;/td&gt;
&lt;td&gt;to blueprint 为……制蓝图&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;blacklist 黑名单&lt;/td&gt;
&lt;td&gt;to blacklist 列入黑名单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;honeymoon 蜜月&lt;/td&gt;
&lt;td&gt;to honeymoon 度蜜月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;first name 名&lt;/td&gt;
&lt;td&gt;to first name 直呼其名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spotlight 公众注意中心&lt;/td&gt;
&lt;td&gt;to spotlight 使突出醒目&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;使用逆生法生成动词&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;合成名词/形容词&lt;/th&gt;
&lt;th&gt;逆生成合成动词&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;chain smoker 一支接一支抽烟的人&lt;/td&gt;
&lt;td&gt;to chain smoker 一支接着一支地抽烟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;speed-reading 快速阅读&lt;/td&gt;
&lt;td&gt;to speed-reading 快速阅读&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vacuum cleaner 真空吸尘器&lt;/td&gt;
&lt;td&gt;to vacuum cleaner 用真空吸尘器除尘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tape recorder 磁带录音机&lt;/td&gt;
&lt;td&gt;to tape recorder 用磁带录音&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;英语的基本构词法主要包括词缀法、合成法、转换法。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;合成法&lt;/strong&gt;，具体是指将两个或两个以上的词按一定的顺序组成在一起构成新词的方法。&lt;/p&gt;
    
    </summary>
    
      <category term="英语" scheme="http://www.gcusky.com/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="读书笔记" scheme="http://www.gcusky.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>UML 类图</title>
    <link href="http://www.gcusky.com/2016/04/30/DesignPattern/"/>
    <id>http://www.gcusky.com/2016/04/30/DesignPattern/</id>
    <published>2016-04-30T14:01:28.000Z</published>
    <updated>2016-05-01T09:58:17.299Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;怪自己之前的 &lt;strong&gt;UML&lt;/strong&gt; 没有注意到其重要性认真对待，现在学起 &lt;strong&gt;设计模式&lt;/strong&gt; 简直了……&lt;br&gt;重新捡起来吧，为时不晚……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;类图（Class diagram）是&lt;strong&gt;显示了模型的静态结构&lt;/strong&gt;，特别是模型中存在的类、类的内部结构以及它们与其他类的关系等。&lt;/li&gt;
&lt;li&gt;类图&lt;strong&gt;不显示暂时性信息&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;类的表示&quot;&gt;&lt;a href=&quot;#类的表示&quot; class=&quot;headerlink&quot; title=&quot;类的表示&quot;&gt;&lt;/a&gt;类的表示&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在UML中，类使用具有类名称、属性、操作分隔得长方形来表示。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg. 定义一个类 &lt;code&gt;Employee&lt;/code&gt; ，它包含属性 &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;age&lt;/code&gt; 和 &lt;code&gt;email&lt;/code&gt;，以及操作 &lt;code&gt;modifyInfo()&lt;/code&gt;，在UML类图中该类如图示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/uml-01.jpg&quot; alt=&quot;Employee&quot;&gt;&lt;/p&gt;
&lt;p&gt;该类对应的Java代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Employee&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String email;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;modifyInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// ……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;按照Java语言的命名规范，&lt;strong&gt;类名&lt;/strong&gt;中每一个单词的首字母均大写。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;属性&lt;/strong&gt;表示方式：&lt;code&gt;可见性 名称 : 类型 [ = 默认值]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;表示方式：&lt;code&gt;可见性 名称(参数列表) [ : 返回类型]&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;可见性：&lt;code&gt;+&lt;/code&gt; 公有（public）、&lt;code&gt;-&lt;/code&gt; 私有（private）、&lt;code&gt;#&lt;/code&gt; 受保护（protected）、&lt;code&gt;*&lt;/code&gt; 包内可见性（package）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;类之间的关系&quot;&gt;&lt;a href=&quot;#类之间的关系&quot; class=&quot;headerlink&quot; title=&quot;类之间的关系&quot;&gt;&lt;/a&gt;类之间的关系&lt;/h2&gt;&lt;h3 id=&quot;依赖关系&quot;&gt;&lt;a href=&quot;#依赖关系&quot; class=&quot;headerlink&quot; title=&quot;依赖关系&quot;&gt;&lt;/a&gt;依赖关系&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;依赖（Dependency）关系是一种&lt;strong&gt;使用关系&lt;/strong&gt;【所以要尽量不使用双向的互相依赖】，特定事物的改变有可能会影响到使用该事物的其他事物，在需要表示一个事物使用另一个事物时使用依赖关系。&lt;/li&gt;
&lt;li&gt;在系统实施阶段，依赖关系通常通过三种方式来实现：&lt;ul&gt;
&lt;li&gt;第一种也是最常用的一种方式是将一个类的对象作为另一个类中方法的参数；&lt;/li&gt;
&lt;li&gt;第二种方式是在一个类的方法中将另一个类的对象作为其局部变量；&lt;/li&gt;
&lt;li&gt;第三种方式是在一个类的方法中调用另一个类的静态方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;大多数情况下，&lt;strong&gt;依赖关系体现在某个类的方法使用另一个类的对象作为参数&lt;/strong&gt;【第一种方式】。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg. 驾驶员开车，在 &lt;code&gt;Driver&lt;/code&gt; 类的 &lt;code&gt;drive()&lt;/code&gt; 方法中将 &lt;code&gt;Car&lt;/code&gt; 类型的对象&lt;code&gt;car&lt;/code&gt; 作为一个参数传递，以便在 &lt;code&gt;drive()&lt;/code&gt; 方法中能够调用 &lt;code&gt;car&lt;/code&gt; 的 &lt;code&gt;move()&lt;/code&gt; 方法，且驾驶员的 &lt;code&gt;drive()&lt;/code&gt; 方法依赖车的 &lt;code&gt;move()&lt;/code&gt; 方法，因此类 &lt;code&gt;Driver&lt;/code&gt; 依赖类 &lt;code&gt;Car&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/uml-02-1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Driver&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;drive&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Car car)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        car.move();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Car&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;关联关系&quot;&gt;&lt;a href=&quot;#关联关系&quot; class=&quot;headerlink&quot; title=&quot;关联关系&quot;&gt;&lt;/a&gt;关联关系&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;关联关系（Association）是一种&lt;strong&gt;结构化关系&lt;/strong&gt;，用于表示一类对象与另一类对象之间有联系。&lt;/li&gt;
&lt;li&gt;在实现关联关系时，通常将一个类的对象作为另一个类的成员变量。&lt;/li&gt;
&lt;li&gt;箭头及指向：带普通箭头的实心线，指向被拥有者。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;单向关联&quot;&gt;&lt;a href=&quot;#单向关联&quot; class=&quot;headerlink&quot; title=&quot;单向关联&quot;&gt;&lt;/a&gt;单向关联&lt;/h4&gt;&lt;p&gt;eg. 顾客（Customer）拥有地址（Address），则 &lt;code&gt;Customer&lt;/code&gt; 类与 &lt;code&gt;Address&lt;/code&gt; 类具有单向关联关系。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/uml-03.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Customer&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Address address;&lt;span class=&quot;comment&quot;&gt;//定义为成员变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Address&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;双向关联&quot;&gt;&lt;a href=&quot;#双向关联&quot; class=&quot;headerlink&quot; title=&quot;双向关联&quot;&gt;&lt;/a&gt;双向关联&lt;/h4&gt;&lt;p&gt;eg. 顾客（Customer）购买商品（Product）并拥有商品，反之，卖出的商品总有某个顾客与之相关联。因此，&lt;code&gt;Customer&lt;/code&gt; 类和 &lt;code&gt;Product&lt;/code&gt; 类之间具有双向关联关系。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/uml-04.jpg&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Customer&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Product[] products;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Product&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Customer customer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;自关联&quot;&gt;&lt;a href=&quot;#自关联&quot; class=&quot;headerlink&quot; title=&quot;自关联&quot;&gt;&lt;/a&gt;自关联&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在系统中可能会存在一些类的属性对象为该类本身，称为自关联。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg. 一个节点类（Node）的成员又是节点对象。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/uml-05.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Node&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Node subNode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;多重关联&quot;&gt;&lt;a href=&quot;#多重关联&quot; class=&quot;headerlink&quot; title=&quot;多重关联&quot;&gt;&lt;/a&gt;多重关联&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表示方式&lt;/th&gt;
&lt;th&gt;多重说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1..1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示另一个类的一个对象只与一个该类对象有关系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0..*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示另一个类的一个对象与零个或多个该类对象有关系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1..*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示另一个类的一个对象与一个或多个该类对象有关系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0..1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示另一个类的一个对象没有或只与一个该类对象有关系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;m..n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示另一个类的一个对象与最少m、最多n个该类对象有关系 $( m &amp;lt;= n )$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;eg. 一个界面（Form）可以拥有零个或多个按钮（Button），但是一个按钮只能属于一个界面，因此，一个 &lt;code&gt;Form&lt;/code&gt; 类的对象可以与零个或多个 &lt;code&gt;Button&lt;/code&gt; 类的对象相关联，但一个 &lt;code&gt;Button&lt;/code&gt; 类的对象只能与一个 &lt;code&gt;Form&lt;/code&gt; 类的对象关联。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/uml-06.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Form&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Button[] buttons; &lt;span class=&quot;comment&quot;&gt;//定义一个集合对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Button&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;聚合关系&quot;&gt;&lt;a href=&quot;#聚合关系&quot; class=&quot;headerlink&quot; title=&quot;聚合关系&quot;&gt;&lt;/a&gt;聚合关系&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;聚合（Aggregation）关系表示&lt;strong&gt;整体与部分的关系&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;在聚合关系中，成员对象是整体对象的一部分，但是成员对象可以脱离整体对象独立存在。&lt;/li&gt;
&lt;li&gt;聚合关系是关联关系的一种，是强的关联关系；关联和聚合在语法上无法区分，必须考察具体的逻辑关系。&lt;/li&gt;
&lt;li&gt;在代码实现聚合关系时，成员对象通常作为构造方法、Setter方法或业务方法的参数注入（Injection）到整体对象中。&lt;/li&gt;
&lt;li&gt;箭头及指向：带实心菱形的实线，菱形指向整体。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg. 汽车发动机（Engine）是汽车（Car）的组成部分，但是汽车发动机可以独立存在，因此，汽车和发动机是聚合关系。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/uml-07.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Car&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Engine engine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//构造注入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Engine engine)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.engine = engine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//设值注入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setEngine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Engine engine)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.engine = engine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Engine&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上述代码中，&lt;code&gt;Car&lt;/code&gt; 定义了一个 &lt;code&gt;Engine&lt;/code&gt; 类型的成员变量，从语义上来说，&lt;code&gt;Engine&lt;/code&gt; 是 &lt;code&gt;Car&lt;/code&gt; 的一部分，但是 &lt;code&gt;Engine&lt;/code&gt; 对象可以脱离 &lt;code&gt;Car&lt;/code&gt; 单独存在，因此在类 &lt;code&gt;Car&lt;/code&gt; 中并不直接实例化 &lt;code&gt;Engine&lt;/code&gt;，而是通过构造方法或者设值方法 &lt;code&gt;Setter&lt;/code&gt; 将在类外部实例化好的 &lt;code&gt;Engine&lt;/code&gt; 对象以参数形式传入到 &lt;code&gt;Car&lt;/code&gt; 中，这种传入方式称为注入。正因为 &lt;code&gt;Car&lt;/code&gt; 和 &lt;code&gt;Engine&lt;/code&gt; 的实例化时刻不同，因此它们之间不存在生命周期的制约关系，而仅仅只是整体与部分之间的关系而已。&lt;/p&gt;
&lt;h3 id=&quot;组合关系&quot;&gt;&lt;a href=&quot;#组合关系&quot; class=&quot;headerlink&quot; title=&quot;组合关系&quot;&gt;&lt;/a&gt;组合关系&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;组合（Composition）关系也表示类之间&lt;strong&gt;整体和部分的关系&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;但组合关系中整体对象可以控制成员对象的生命周期：&lt;ul&gt;
&lt;li&gt;一旦整体对象不存在，成员对象也将不存在，成员对象与整体对象之间具有同生共死的关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在代码实现组合关系时，通常在整体类的构造方法中直接实例化成员类。&lt;/li&gt;
&lt;li&gt;箭头及指向：带实心菱形的实线，菱形指向整体。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg. 人的头（Head）与嘴巴（Mouth），嘴巴是头的组成部分之一，而且如果头没了，嘴巴也就没了，因此头和嘴巴是组合关系。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/uml-08.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Head&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Mouth mouth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Head&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mouth = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Mouth(); &lt;span class=&quot;comment&quot;&gt;//实例化成员类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Mouth&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;泛化关系&quot;&gt;&lt;a href=&quot;#泛化关系&quot; class=&quot;headerlink&quot; title=&quot;泛化关系&quot;&gt;&lt;/a&gt;泛化关系&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;泛化（Generalization）关系也就是&lt;strong&gt;继承关系&lt;/strong&gt;，用于描述父类与子类之间的关系。&lt;/li&gt;
&lt;li&gt;泛化关系指定了子类如何特化父类的所有特征和行为。&lt;/li&gt;
&lt;li&gt;在代码实现时，我们使用面向对象的继承机制来实现泛化关系：&lt;ul&gt;
&lt;li&gt;如在Java语言中使用 &lt;code&gt;extends&lt;/code&gt; 关键字、在C++/C#中使用冒号 &lt;code&gt;:&lt;/code&gt; 来实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;箭头指向：带三角箭头的实线，箭头指向父类。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg. &lt;code&gt;Student&lt;/code&gt; 类和 &lt;code&gt;Teacher&lt;/code&gt; 类都是 &lt;code&gt;Person&lt;/code&gt; 类的子类，&lt;code&gt;Student&lt;/code&gt; 类和 &lt;code&gt;Teacher&lt;/code&gt; 类继承了 &lt;code&gt;Person&lt;/code&gt; 类的属性和方法，&lt;code&gt;Person&lt;/code&gt; 类的属性包含姓名（name）和年龄（age），每一个 &lt;code&gt;Student&lt;/code&gt; 和 &lt;code&gt;Teacher&lt;/code&gt; 也都具有这两个属性，另外 &lt;code&gt;Student&lt;/code&gt; 类增加了属性学号（studentNo），&lt;code&gt;Teacher&lt;/code&gt; 类增加了属性教师编号（teacherNo），&lt;code&gt;Person&lt;/code&gt; 类的方法包括行走 &lt;code&gt;move()&lt;/code&gt; 和说话 &lt;code&gt;say()&lt;/code&gt;，&lt;code&gt;Student&lt;/code&gt; 类和 &lt;code&gt;Teacher&lt;/code&gt; 类继承了这两个方法，而且 &lt;code&gt;Student&lt;/code&gt; 类还新增方法 &lt;code&gt;study()&lt;/code&gt;，&lt;code&gt;Teacher&lt;/code&gt; 类还新增方法 &lt;code&gt;teach()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/uml-09.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//父类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;say&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//子类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Student&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String studentNo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;study&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//子类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Teacher&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String teacherNo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;teach&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;实现关系&quot;&gt;&lt;a href=&quot;#实现关系&quot; class=&quot;headerlink&quot; title=&quot;实现关系&quot;&gt;&lt;/a&gt;实现关系&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;实现关系（Realization）是一种&lt;strong&gt;类与接口的关系&lt;/strong&gt;，表示类是接口所有特征和行为的实现。&lt;/li&gt;
&lt;li&gt;在接口中，通常没有属性，而且所有的操作都是抽象的，只有操作的声明，没有操作的实现。&lt;/li&gt;
&lt;li&gt;接口之间也可以有与类之间关系类似的继承关系和依赖关系，但是接口和类之间还存在一种实现关系：&lt;ul&gt;
&lt;li&gt;在这种关系中，类实现了接口，类中的操作实现了接口中所声明的操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;箭头指向：带三角箭头的虚线，箭头指向接口。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg. 定义了一个交通工具接口 &lt;code&gt;Vehicle&lt;/code&gt;，包含一个抽象操作 &lt;code&gt;move()&lt;/code&gt;，在类 &lt;code&gt;Ship&lt;/code&gt; 和类 &lt;code&gt;Car&lt;/code&gt; 中都实现了该 &lt;code&gt;move()&lt;/code&gt; 操作，不过具体的实现细节将会不一样，如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/uml-10.jpg&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Vehicle&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Ship&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Vehicle&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Vehicle&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;综合考虑&quot;&gt;&lt;a href=&quot;#综合考虑&quot; class=&quot;headerlink&quot; title=&quot;综合考虑&quot;&gt;&lt;/a&gt;综合考虑&lt;/h2&gt;&lt;p&gt;各种关系的强弱顺序：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;泛化 = 实现 &amp;gt; 组合 &amp;gt; 聚合 &amp;gt; 关联 &amp;gt; 依赖
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下面这张UML图，比较形象地展示了各种类图关系&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/uml/uml-11.jpg&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于企鹅跟气候的关系&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;程杰出的《大话设计模式》P14页他这样解释：“你看企鹅和气候两个类，企鹅是很特别的鸟，会游不会飞。更重要的是，它与气候有很大的关联。我们不去讨论为什么北极没有企鹅，为什么它们要每年长途跋涉。总之，企鹅需要‘知道’气候的变化，需要‘了解’气候规律。当一个类‘知道’另一个类时，可以用关联（association）。关联关系用实线箭头来表示。”&lt;br&gt;根据引用的解释，再来看&lt;strong&gt;关联关系：是一种拥有的关系,它使一个类知道另一个类的属性和方法。&lt;/strong&gt;就非常容易理解了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;刘伟技术博客 —— UML &lt;a href=&quot;http://blog.csdn.net/LoveLion/article/category/738449&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/LoveLion/article/category/738449&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UML类图几种关系的总结 &lt;a href=&quot;http://blog.csdn.net/tianhai110/article/details/6339565&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/tianhai110/article/details/6339565&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;怪自己之前的 &lt;strong&gt;UML&lt;/strong&gt; 没有注意到其重要性认真对待，现在学起 &lt;strong&gt;设计模式&lt;/strong&gt; 简直了……&lt;br&gt;重新捡起来吧，为时不晚……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;类图（Class diagram）是&lt;strong&gt;显示了模型的静态结构&lt;/strong&gt;，特别是模型中存在的类、类的内部结构以及它们与其他类的关系等。&lt;/li&gt;
&lt;li&gt;类图&lt;strong&gt;不显示暂时性信息&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="设计模式" scheme="http://www.gcusky.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="UML" scheme="http://www.gcusky.com/tags/UML/"/>
    
  </entry>
  
  <entry>
    <title>设计模式概述</title>
    <link href="http://www.gcusky.com/2016/04/28/DesignPattern-1/"/>
    <id>http://www.gcusky.com/2016/04/28/DesignPattern-1/</id>
    <published>2016-04-28T09:18:41.000Z</published>
    <updated>2016-04-30T14:03:23.619Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;设计模式是一套被反复使用、代码设计经验的总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;模式的诞生与定义&quot;&gt;&lt;a href=&quot;#模式的诞生与定义&quot; class=&quot;headerlink&quot; title=&quot;模式的诞生与定义&quot;&gt;&lt;/a&gt;模式的诞生与定义&lt;/h2&gt;&lt;h3 id=&quot;模式的诞生&quot;&gt;&lt;a href=&quot;#模式的诞生&quot; class=&quot;headerlink&quot; title=&quot;模式的诞生&quot;&gt;&lt;/a&gt;模式的诞生&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;模式起源于建筑业而非软件业&lt;/li&gt;
&lt;li&gt;模式(Pattern)之父——美国加利佛尼亚大学环境结构中心研究所所长Christopher Alexander博士&lt;br&gt;《_A Pattern Language: Towns, Buildings, Construction_》—— 253个建筑和城市规划模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;模式的定义&quot;&gt;&lt;a href=&quot;#模式的定义&quot; class=&quot;headerlink&quot; title=&quot;模式的定义&quot;&gt;&lt;/a&gt;模式的定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Context&lt;/strong&gt;（模式可适用的前提条件）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Theme或Problem&lt;/strong&gt;（在特定条件下要解决的目标问题）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Solution&lt;/strong&gt;（对目标问题求解过程中各种物理关系的记述）&lt;/li&gt;
&lt;li&gt;Alexander：每个模式都描述了一个&lt;strong&gt;在我们的环境中不断出现的问题&lt;/strong&gt;，然后描述了该问题的&lt;strong&gt;解决方案&lt;/strong&gt;的核心，通过这种方式，我们可以无数次地重用那些已有的解决方案，无需再重复相同的工作。 &lt;/li&gt;
&lt;li&gt;A pattern is a &lt;strong&gt;solution&lt;/strong&gt; to a &lt;strong&gt;problem&lt;/strong&gt; in a &lt;strong&gt;context&lt;/strong&gt; —— 模式是在&lt;strong&gt;特定环境&lt;/strong&gt;中&lt;strong&gt;解决问题&lt;/strong&gt;的一种&lt;strong&gt;方案&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;软件模式&quot;&gt;&lt;a href=&quot;#软件模式&quot; class=&quot;headerlink&quot; title=&quot;软件模式&quot;&gt;&lt;/a&gt;软件模式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1990年，软件工程界开始关注Christopher Alexander等在这一住宅、公共建筑与城市规划领域的重大突破，最早将该模式的思想引入软件工程方法学的是1991-1992年以“四人组(Gang of Four，GoF，分别是Erich Gamma, Richard Helm, Ralph Johnson和John Vlissides)”自称的四位著名软件工程学者，他们在1994年归纳发表了23种在软件开发中使用频率较高的设计模式，旨在&lt;strong&gt;用模式来统一沟通面向对象方法在分析、设计和实现间的鸿沟&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;软件模式是将模式的一般概念应用于软件开发领域，即&lt;strong&gt;软件开发的总体指导思路或参照样板&lt;/strong&gt;。软件模式并非仅限于设计模式，还包括架构模式、分析模式和过程模式等，实际上，&lt;strong&gt;在软件生存期的每一个阶段都存在着一些被认同的模式&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;软件模式可以认为是&lt;strong&gt;对软件开发这一特定“问题”的“解法”的某种统一表示&lt;/strong&gt;，它和Alexander所描述的模式定义完全相同，即&lt;strong&gt;软件模式等于一定条件下的出现的问题以及解法&lt;/strong&gt;。软件模式的基础结构由4个部分构成：&lt;strong&gt;问题描述、前提条件（环境或约束条件）、解法和效果&lt;/strong&gt;。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;设计模式的定义与分类&quot;&gt;&lt;a href=&quot;#设计模式的定义与分类&quot; class=&quot;headerlink&quot; title=&quot;设计模式的定义与分类&quot;&gt;&lt;/a&gt;设计模式的定义与分类&lt;/h2&gt;&lt;h3 id=&quot;设计模式的定义&quot;&gt;&lt;a href=&quot;#设计模式的定义&quot; class=&quot;headerlink&quot; title=&quot;设计模式的定义&quot;&gt;&lt;/a&gt;设计模式的定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;设计模式(Design Pattern)&lt;/strong&gt;是一套&lt;strong&gt;被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结&lt;/strong&gt;，使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;设计模式的基本要素&quot;&gt;&lt;a href=&quot;#设计模式的基本要素&quot; class=&quot;headerlink&quot; title=&quot;设计模式的基本要素&quot;&gt;&lt;/a&gt;设计模式的基本要素&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;设计模式一般有如下几个基本要素：模式名称、问题、目的、解决方案、效果、实例代码和相关设计模式，其中的关键元素包括以下四个方面：&lt;ul&gt;
&lt;li&gt;模式名称 (Pattern name) &lt;/li&gt;
&lt;li&gt;问题 (Problem) &lt;/li&gt;
&lt;li&gt;解决方案 (Solution) &lt;/li&gt;
&lt;li&gt;效果 (Consequences) &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;设计模式的分类&quot;&gt;&lt;a href=&quot;#设计模式的分类&quot; class=&quot;headerlink&quot; title=&quot;设计模式的分类&quot;&gt;&lt;/a&gt;设计模式的分类&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;根据其&lt;strong&gt;目的&lt;/strong&gt;（模式是用来做什么的）可分为&lt;strong&gt;创建型(Creational)&lt;/strong&gt;，&lt;strong&gt;结构型(Structural)&lt;/strong&gt;和&lt;strong&gt;行为型(Behavioral)&lt;/strong&gt;三种：&lt;ul&gt;
&lt;li&gt;创建型模式主要用于&lt;strong&gt;创建对象&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;结构型模式主要用于&lt;strong&gt;处理类或对象的组合&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;行为型模式主要用于&lt;strong&gt;描述对类或对象怎样交互和怎样分配职责&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;根据&lt;strong&gt;范围&lt;/strong&gt;，即模式主要是用于处理类之间关系还是处理对象之间的关系，可分为&lt;strong&gt;类模式&lt;/strong&gt;和&lt;strong&gt;对象模式&lt;/strong&gt;两种：&lt;ul&gt;
&lt;li&gt;类模式&lt;strong&gt;处理类和子类之间的关系&lt;/strong&gt;，这些关系通过继承建立，在编译时刻就被确定下来，是属于&lt;strong&gt;静态&lt;/strong&gt;的。 &lt;/li&gt;
&lt;li&gt;对象模式&lt;strong&gt;处理对象间的关系&lt;/strong&gt;，这些关系在运行时刻变化，更具&lt;strong&gt;动态&lt;/strong&gt;性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;GoF设计模式简介&quot;&gt;&lt;a href=&quot;#GoF设计模式简介&quot; class=&quot;headerlink&quot; title=&quot;GoF设计模式简介&quot;&gt;&lt;/a&gt;GoF设计模式简介&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;范围\目的&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;创建型模式&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;结构型模式&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;行为型模式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;类模式&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;工厂方法模式&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;（类）适配器模式&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;解释器模式&lt;br&gt;模板方法模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;对象模式&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;抽象工厂模式&lt;br&gt;建造者模式&lt;br&gt;原型模式&lt;br&gt;单例模式&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;（对象）适配器模式&lt;br&gt;桥接模式&lt;br&gt;组合模式&lt;br&gt;装饰模式&lt;br&gt;外观模式&lt;br&gt;享元模式&lt;br&gt;代理模式&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;职责链模式&lt;br&gt;命令模式&lt;br&gt;迭代器模式&lt;br&gt;中介者模式&lt;br&gt;备忘录模式&lt;br&gt;观察者模式&lt;br&gt;状态模式&lt;br&gt;策略模式&lt;br&gt;访问者模式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;设计模式的优点&quot;&gt;&lt;a href=&quot;#设计模式的优点&quot; class=&quot;headerlink&quot; title=&quot;设计模式的优点&quot;&gt;&lt;/a&gt;设计模式的优点&lt;/h2&gt;&lt;p&gt;设计模式是从许多优秀的软件系统中总结出的&lt;strong&gt;成功的、能够实现可维护性复用的设计方案&lt;/strong&gt;，使用这些方案将避免我们做一些重复性的工作，而且可以设计出高质量的软件系统。&lt;/p&gt;
&lt;p&gt;设计模式的主要优点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计模式&lt;strong&gt;融合了众多专家的经验&lt;/strong&gt;，并以一种&lt;strong&gt;标准的形式&lt;/strong&gt;供广大开发人员所用，它提供了&lt;strong&gt;一套通用的设计词汇和一种通用的语言&lt;/strong&gt;以方便开发人员之间沟通和交流，使得设计方案更加通俗易懂。对于使用不同编程语言的开发和设计人员可以通过设计模式来交流系统设计方案，每一个模式都对应一个标准的解决方案，设计模式&lt;strong&gt;可以降低开发人员理解系统的复杂度&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;设计模式使人们可以更加&lt;strong&gt;简单方便地复用成功的设计和体系结构&lt;/strong&gt;，将已证实的技术表述成设计模式也会使新系统开发者更加容易理解其设计思路。设计模式使得重用成功的设计更加容易，并避免那些导致不可重用的设计方案。&lt;/li&gt;
&lt;li&gt;设计模式&lt;strong&gt;使得设计方案更加灵活，且易于修改&lt;/strong&gt;。 &lt;/li&gt;
&lt;li&gt;设计模式的使用将&lt;strong&gt;提高软件系统的开发效率和软件质量&lt;/strong&gt;，且在一定程度上&lt;strong&gt;节约设计成本&lt;/strong&gt;。 &lt;/li&gt;
&lt;li&gt;设计模式&lt;strong&gt;有助于初学者更深入地理解面向对象思想&lt;/strong&gt;，一方面可以帮助初学者更加方便地阅读和学习现有类库与其他系统中的源代码，另一方面还可以提高软件的设计水平和代码质量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;p&gt; &lt;a href=&quot;http://item.jd.com/10854678.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《设计模式》&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;设计模式是一套被反复使用、代码设计经验的总结。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="设计模式" scheme="http://www.gcusky.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="http://www.gcusky.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>英语基本构词法之词缀法</title>
    <link href="http://www.gcusky.com/2016/04/27/english-2/"/>
    <id>http://www.gcusky.com/2016/04/27/english-2/</id>
    <published>2016-04-27T14:09:00.000Z</published>
    <updated>2016-05-01T07:42:11.273Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;英语的基本构词法主要包括词缀法、合成法、转换法。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;词缀法是派生法的一种主要构词法，它利用派生词缀和词根结合构成新词。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;前缀&quot;&gt;&lt;a href=&quot;#前缀&quot; class=&quot;headerlink&quot; title=&quot;前缀&quot;&gt;&lt;/a&gt;前缀&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通常情况下，前缀对词义的影响较大，一般对词汇意义起修饰或限制作用，基本不改变词性，如unfair、unhappy、dishonest等。&lt;/li&gt;
&lt;li&gt;前缀所起的作用与&lt;strong&gt;副词&lt;/strong&gt;相仿，可以表示态度、程度、方式、否定、时间、地点等概念。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;前缀的分类&quot;&gt;&lt;a href=&quot;#前缀的分类&quot; class=&quot;headerlink&quot; title=&quot;前缀的分类&quot;&gt;&lt;/a&gt;前缀的分类&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;表&lt;strong&gt;否定&lt;/strong&gt;意义的前缀，如 &lt;code&gt;a-&lt;/code&gt;、&lt;code&gt;un-&lt;/code&gt;、&lt;code&gt;non-&lt;/code&gt;、&lt;code&gt;in-&lt;/code&gt;、&lt;code&gt;dis-&lt;/code&gt; 等。&lt;/li&gt;
&lt;li&gt;表&lt;strong&gt;相反或消极&lt;/strong&gt;的前缀，如 &lt;code&gt;un-&lt;/code&gt;、&lt;code&gt;de-&lt;/code&gt;、&lt;code&gt;dis-&lt;/code&gt; 等。&lt;/li&gt;
&lt;li&gt;表&lt;strong&gt;程度或大小&lt;/strong&gt;的前缀，如 &lt;code&gt;arch-&lt;/code&gt;、&lt;code&gt;super-&lt;/code&gt;、&lt;code&gt;out-&lt;/code&gt;、&lt;code&gt;sub-&lt;/code&gt;、&lt;code&gt;over-&lt;/code&gt;、&lt;code&gt;under-&lt;/code&gt;、&lt;code&gt;hyper-&lt;/code&gt;、&lt;code&gt;ultra-&lt;/code&gt;、&lt;code&gt;mini-&lt;/code&gt; 等。&lt;/li&gt;
&lt;li&gt;表&lt;strong&gt;轻视&lt;/strong&gt;的前缀，如 &lt;code&gt;mis-&lt;/code&gt;、&lt;code&gt;mal-&lt;/code&gt;、&lt;code&gt;pseudo-&lt;/code&gt; 等。&lt;/li&gt;
&lt;li&gt;表&lt;strong&gt;态度&lt;/strong&gt;的前缀，如 &lt;code&gt;co-&lt;/code&gt;、&lt;code&gt;counter-&lt;/code&gt;、&lt;code&gt;anti-&lt;/code&gt;、&lt;code&gt;pro-&lt;/code&gt; 等。&lt;/li&gt;
&lt;li&gt;表&lt;strong&gt;时间或顺序&lt;/strong&gt;的前缀，如 &lt;code&gt;fore-&lt;/code&gt;、&lt;code&gt;pie-&lt;/code&gt;、&lt;code&gt;post-&lt;/code&gt;、&lt;code&gt;ex-&lt;/code&gt;、&lt;code&gt;re-&lt;/code&gt; 等。&lt;/li&gt;
&lt;li&gt;表&lt;strong&gt;方位&lt;/strong&gt;的前缀，如 &lt;code&gt;fore-&lt;/code&gt;、&lt;code&gt;inter-&lt;/code&gt;、&lt;code&gt;trans-&lt;/code&gt; 等。&lt;/li&gt;
&lt;li&gt;表&lt;strong&gt;数量&lt;/strong&gt;的前缀，如 &lt;code&gt;uni-/mono-&lt;/code&gt;、&lt;code&gt;bi-/di-&lt;/code&gt;、&lt;code&gt;tri-&lt;/code&gt;、&lt;code&gt;multi-/poly-&lt;/code&gt; 等。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;构词能力较强的前缀&quot;&gt;&lt;a href=&quot;#构词能力较强的前缀&quot; class=&quot;headerlink&quot; title=&quot;构词能力较强的前缀&quot;&gt;&lt;/a&gt;构词能力较强的前缀&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ant-/anti-&lt;/code&gt; 表 against&lt;ul&gt;
&lt;li&gt;eg. anti-art 非正统派艺术；antibiotic 抗生的、抗生素；anti-body 抗体；anti-social 反社会的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;auto-&lt;/code&gt; 表 self&lt;ul&gt;
&lt;li&gt;eg. autoboat 汽艇；automation 自动化；automobile 汽车&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;co-/con-/col-/cor-&lt;/code&gt; 表“结合、联合、共同；相互的关系”&lt;ul&gt;
&lt;li&gt;eg. cooperate 合作；cochairman 联合主席；colleague 同事；combine 联合；concur 同时发生；correspond 符合、相称、通信&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counter-&lt;/code&gt; 表“与……相反，反”&lt;ul&gt;
&lt;li&gt;eg. counterattack 反击；counterpart 对应一方；counterplot 对抗策略&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dis-&lt;/code&gt; 表“与……相反，不”&lt;ul&gt;
&lt;li&gt;eg. disallow 不承认（某事物）有效、不接受；disadapt 使……不适应；disambiguate 消除……的歧义&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;de-&lt;/code&gt; 表“除去、向下”&lt;ul&gt;
&lt;li&gt;eg. decentralize 权力分散；de-compose 腐烂、拆分；defunct 已消亡的；deoil 去油；devalue 贬值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ex-&lt;/code&gt; 表“外面、朝外、前……”&lt;ul&gt;
&lt;li&gt;eg. exhale 呼气；extertor 外部的；ex-president 前任总统；ex-student 前学生&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extra-&lt;/code&gt; 表outside、beyond&lt;ul&gt;
&lt;li&gt;eg. extra-strong 超强；extraordinary 不平常的；extramarital 私通的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fore-&lt;/code&gt; 表“前部、先”&lt;ul&gt;
&lt;li&gt;eg. forearm 前臂；forecast 预言；foremost 首要的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inter-&lt;/code&gt; 表“在……之间、在……中间”&lt;ul&gt;
&lt;li&gt;eg. inter-city 市际间的；intercollege 学院间的；interface 共界面&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mal-&lt;/code&gt; 表“恶、不良”&lt;ul&gt;
&lt;li&gt;eg. maladjusted 心理失调的；maltreat 虐待；malnutrition 营养不良&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mini-&lt;/code&gt; 表“小、微小；短暂”&lt;ul&gt;
&lt;li&gt;eg. minibus 小公共汽车、面包车；miniboom 短暂的繁荣&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mis-&lt;/code&gt; 表“错误、歧途”&lt;ul&gt;
&lt;li&gt;eg. miscalculate 算错；misconduct 不端行为；misfortune 不幸&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;non-&lt;/code&gt; 表“无、非、不；假、劣；缺乏传统特征的”&lt;ul&gt;
&lt;li&gt;eg. non-aligned 不结盟的；non-classical 非经典的；nondebate 假辩论、noninvoled 拒绝介入的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;over-&lt;/code&gt; 表“过于、过分；上方”&lt;ul&gt;
&lt;li&gt;eg. overdo 做得过头；overconfident 过分自信；overbridge 天桥&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;post-&lt;/code&gt; 表“在……之后”&lt;ul&gt;
&lt;li&gt;eg. postgraduate 研究生、post-doctorial 博士后；post-war 战后的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pre-&lt;/code&gt; 表“在……之前”&lt;ul&gt;
&lt;li&gt;eg. precaution 预防；prearrange 预先准备；pre-battle 战前的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;re-&lt;/code&gt; 表“再、复”&lt;ul&gt;
&lt;li&gt;eg. rebuild 重建；reaffirm 重申；react 反作用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;un-&lt;/code&gt; 表“不、非”&lt;ul&gt;
&lt;li&gt;eg. unfair 不公平；unexpected 意外的；unfeeling 残酷、冷漠；unwrap 打开、展开&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;under-&lt;/code&gt; 表“在……之下、过小、不足”&lt;ul&gt;
&lt;li&gt;eg. underground 地下的；undereducated 未受过良好教育的； underdeveloped 不发达的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;改变词性的前缀&quot;&gt;&lt;a href=&quot;#改变词性的前缀&quot; class=&quot;headerlink&quot; title=&quot;改变词性的前缀&quot;&gt;&lt;/a&gt;改变词性的前缀&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;前缀&lt;/th&gt;
&lt;th&gt;意义&lt;/th&gt;
&lt;th&gt;词性转换&lt;/th&gt;
&lt;th&gt;例词&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;en-、em-&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使……，受……；使……变成&lt;/td&gt;
&lt;td&gt;名 → 动&lt;br&gt;形 → 动&lt;/td&gt;
&lt;td&gt;embody 体现、empower 授权、encourage 鼓励；&lt;br&gt;enable 使能够、enlarge 扩大、enrich 使富裕、ensure 担保&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;be-&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使……（成为）&lt;/td&gt;
&lt;td&gt;名 → 动&lt;br&gt;形 → 动&lt;/td&gt;
&lt;td&gt;becloud 遮掩、befriend 尽朋友之道；&lt;br&gt;becalm 使……平静、benumb 使麻木&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a-&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使……进入状态&lt;/td&gt;
&lt;td&gt;动 → 形&lt;br&gt;名 → 形&lt;/td&gt;
&lt;td&gt;asleep 睡着、astir 激动起来、astray 误入歧途的；&lt;br&gt;afire 燃烧着、afoot 在进行中&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;后缀&quot;&gt;&lt;a href=&quot;#后缀&quot; class=&quot;headerlink&quot; title=&quot;后缀&quot;&gt;&lt;/a&gt;后缀&lt;/h2&gt;&lt;p&gt;后缀的作用是语法功能，往往会改变词性，也就是使一种词类变成另一种词类.按词类划分，后缀一般可归纳为：&lt;strong&gt;名词后缀、动词后缀、形容词后缀、副词后缀&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;名词后缀&quot;&gt;&lt;a href=&quot;#名词后缀&quot; class=&quot;headerlink&quot; title=&quot;名词后缀&quot;&gt;&lt;/a&gt;名词后缀&lt;/h3&gt;&lt;h4 id=&quot;抽象名词后缀&quot;&gt;&lt;a href=&quot;#抽象名词后缀&quot; class=&quot;headerlink&quot; title=&quot;抽象名词后缀&quot;&gt;&lt;/a&gt;抽象名词后缀&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-age&lt;/code&gt; 表“度、量”&lt;ul&gt;
&lt;li&gt;eg. acreage 英亩数；percentage 百分率；wastage 浪费（量）、损耗（量）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-dom&lt;/code&gt; 表“状态、领域”&lt;ul&gt;
&lt;li&gt;eg. freedom 自由；martyrdom 牺牲；wisdom 智慧&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ry/-ery&lt;/code&gt; 表“与……相关的状态或行为；场所；集合”&lt;ul&gt;
&lt;li&gt;eg. bakery 面包店；delivery 递送；machinery 机械；soldiery军队&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ful&lt;/code&gt; 表“所容的量”&lt;ul&gt;
&lt;li&gt;eg. mouthful 一口的量；handful 一捧的量；hopeful 有希望的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-hood&lt;/code&gt; 表“某种状态或时段”&lt;ul&gt;
&lt;li&gt;eg. brotherhood 手足之情；priesthood 教士的职位；adulthood 成人期；childhood 童年&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ing&lt;/code&gt; 表“某种活动；材料、制……的工艺”&lt;ul&gt;
&lt;li&gt;eg. swimming 游泳；farming 农事；coloring 着色法；spelling 拼写法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ism&lt;/code&gt; 表“某种道义或做法”&lt;ul&gt;
&lt;li&gt;eg. consumerism 消费主义；buddhism 佛教；journalism 新闻业&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ship&lt;/code&gt; 表“某种状态或品质”&lt;ul&gt;
&lt;li&gt;eg. friendship 友情；fellowship 友谊；membership 成员资格&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;具体名词后缀&quot;&gt;&lt;a href=&quot;#具体名词后缀&quot; class=&quot;headerlink&quot; title=&quot;具体名词后缀&quot;&gt;&lt;/a&gt;具体名词后缀&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-ee&lt;/code&gt; 表“受……的人”（动词 → 名词）&lt;ul&gt;
&lt;li&gt;eg. examinee 考生；interviewee 被采访者；trainee 学员&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-eer&lt;/code&gt; 表“从事……的人”（名词 → 名词）&lt;ul&gt;
&lt;li&gt;eg. engineer 工程师；blackmarketeer 黑市商人&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-er/-or/-ar&lt;/code&gt; 表“者，物”（动词 → 名词）&lt;ul&gt;
&lt;li&gt;eg. examiner 考官；actor 演员；beggar 乞丐&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ess&lt;/code&gt; 表“阴性”（名词 → 名词）&lt;ul&gt;
&lt;li&gt;eg. priestess 女神职人员；waitress 女服务员&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-(t)ion&lt;/code&gt; 表“某种动作导致的状态或机构”（动词 → 名词）&lt;ul&gt;
&lt;li&gt;eg. decision 决定；admission 进入；alternation 交替；complication 复杂化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ing&lt;/code&gt; 表“动作的结果”（动词 → 名词）&lt;ul&gt;
&lt;li&gt;eg. savings 储蓄；earnings 赚的钱&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ist&lt;/code&gt; 表“有某种技能的人；信奉……的人”（动词 → 名词；名词 → 名词）&lt;ul&gt;
&lt;li&gt;eg. anarchist 无政府主义者；cellist 大提琴演奏者；communist 共产党员&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ment&lt;/code&gt; 表“动作的过程”（动词 → 名词）&lt;ul&gt;
&lt;li&gt;eg. development 发展；enjoyment 愉快&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ness&lt;/code&gt; 表“状态、品质、程度”（形容词 → 名词）&lt;ul&gt;
&lt;li&gt;eg. correctness 正确；carelessness 粗心；goodness 善良&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;国家、国籍后缀&quot;&gt;&lt;a href=&quot;#国家、国籍后缀&quot; class=&quot;headerlink&quot; title=&quot;国家、国籍后缀&quot;&gt;&lt;/a&gt;国家、国籍后缀&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;以 &lt;code&gt;-an&lt;/code&gt; 为国籍的后缀&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;国家&lt;/th&gt;
&lt;th&gt;国籍&lt;/th&gt;
&lt;th&gt;语言&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;America（美国）&lt;/td&gt;
&lt;td&gt;American&lt;/td&gt;
&lt;td&gt;English&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Australia（澳大利亚）&lt;/td&gt;
&lt;td&gt;Australian&lt;/td&gt;
&lt;td&gt;English&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Canada（加拿大）&lt;/td&gt;
&lt;td&gt;Canadian&lt;/td&gt;
&lt;td&gt;English/French&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Colombia（哥伦比亚）&lt;/td&gt;
&lt;td&gt;Colombian&lt;/td&gt;
&lt;td&gt;Spanish&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cuba（古巴）&lt;/td&gt;
&lt;td&gt;Cuban&lt;/td&gt;
&lt;td&gt;Spanish&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Italy（意大利）&lt;/td&gt;
&lt;td&gt;Italian&lt;/td&gt;
&lt;td&gt;Italian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Russia（俄罗斯）&lt;/td&gt;
&lt;td&gt;Russian&lt;/td&gt;
&lt;td&gt;Russian&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;以 &lt;code&gt;-sh&lt;/code&gt; 或 &lt;code&gt;-ch&lt;/code&gt; 为国籍的后缀&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;国家&lt;/th&gt;
&lt;th&gt;国籍&lt;/th&gt;
&lt;th&gt;语言&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Britain（英国）&lt;/td&gt;
&lt;td&gt;British&lt;/td&gt;
&lt;td&gt;English&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Finland（芬兰）&lt;/td&gt;
&lt;td&gt;Finnish&lt;/td&gt;
&lt;td&gt;Finnish/Swedish&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Denmark（丹麦）&lt;/td&gt;
&lt;td&gt;Danish&lt;/td&gt;
&lt;td&gt;Danish&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;France（法国）&lt;/td&gt;
&lt;td&gt;French&lt;/td&gt;
&lt;td&gt;French&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ireland（爱尔兰）&lt;/td&gt;
&lt;td&gt;Irish&lt;/td&gt;
&lt;td&gt;Irish&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;以 &lt;code&gt;-ese&lt;/code&gt; 为国籍的后缀&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;国家&lt;/th&gt;
&lt;th&gt;国籍&lt;/th&gt;
&lt;th&gt;语言&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;China（中国）&lt;/td&gt;
&lt;td&gt;Chinese&lt;/td&gt;
&lt;td&gt;Chinese&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Japan（日本）&lt;/td&gt;
&lt;td&gt;Japanese&lt;/td&gt;
&lt;td&gt;Japanese&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Portugal（葡萄牙）&lt;/td&gt;
&lt;td&gt;Portuguese&lt;/td&gt;
&lt;td&gt;Portuguese&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Burma（缅甸）&lt;/td&gt;
&lt;td&gt;Burmese&lt;/td&gt;
&lt;td&gt;Burmese&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;以 &lt;code&gt;-ese&lt;/code&gt; 为国籍的后缀&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;国家&lt;/th&gt;
&lt;th&gt;国籍&lt;/th&gt;
&lt;th&gt;语言&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Iraq（伊拉克）&lt;/td&gt;
&lt;td&gt;Iraqi&lt;/td&gt;
&lt;td&gt;Arabic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kuwait（科威特）&lt;/td&gt;
&lt;td&gt;Kuwaiti&lt;/td&gt;
&lt;td&gt;Arabic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Israel（以色列）&lt;/td&gt;
&lt;td&gt;Israeli&lt;/td&gt;
&lt;td&gt;Hebrew/Arabic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Yemen（也门）&lt;/td&gt;
&lt;td&gt;Yemeni&lt;/td&gt;
&lt;td&gt;Arabic&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;形容词后缀&quot;&gt;&lt;a href=&quot;#形容词后缀&quot; class=&quot;headerlink&quot; title=&quot;形容词后缀&quot;&gt;&lt;/a&gt;形容词后缀&lt;/h3&gt;&lt;h4 id=&quot;由名词转成形容词的后缀&quot;&gt;&lt;a href=&quot;#由名词转成形容词的后缀&quot; class=&quot;headerlink&quot; title=&quot;由名词转成形容词的后缀&quot;&gt;&lt;/a&gt;由名词转成形容词的后缀&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-ed&lt;/code&gt; 表“有……特性”&lt;ul&gt;
&lt;li&gt;eg. kind hearted 善意的；simpleminded 纯朴的，（头脑）简单的；one-eyed 独眼的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ful&lt;/code&gt; 表“充满着、有……的”&lt;ul&gt;
&lt;li&gt;eg. harmful 有害的；beautiful 美丽的；meaningful 有意义的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ish&lt;/code&gt; 表“某种程度上像；某种程度；某国人、某国语言”&lt;ul&gt;
&lt;li&gt;eg. boyish 男孩似的；bookish 书生气的；Spanish 西班牙语&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-less&lt;/code&gt; 表“无……”&lt;ul&gt;
&lt;li&gt;eg. hopeless 无希望的；lifeless 无生命力的；homeless 无家可归的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-like&lt;/code&gt; 表“像；具有……特征；适于”&lt;ul&gt;
&lt;li&gt;eg. dreamlike 梦一般的，朦胧的；lifelike 栩栩如生的；lady-like 淑女&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ly&lt;/code&gt; 表“相似的；有……性质的；时间的反复”&lt;ul&gt;
&lt;li&gt;eg. kingly 国王似的；friendly 友好的；daily 每天的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-y&lt;/code&gt; 表“有……性质、有……倾向”&lt;ul&gt;
&lt;li&gt;eg. dirty 脏的；bloody 流血的、血腥的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ous&lt;/code&gt; 表“多……的；有……特征的”&lt;ul&gt;
&lt;li&gt;eg. glorious 光荣的；courageous 勇敢的、无畏的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;由动词转成形容词的后缀&quot;&gt;&lt;a href=&quot;#由动词转成形容词的后缀&quot; class=&quot;headerlink&quot; title=&quot;由动词转成形容词的后缀&quot;&gt;&lt;/a&gt;由动词转成形容词的后缀&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-able/-ible/-ble&lt;/code&gt; 表“可……的；值得……的”&lt;ul&gt;
&lt;li&gt;eg. comfortable 舒适的；contemptible 可鄙的；eatable 可食用的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ive&lt;/code&gt; 表“有……倾向、有……特征的”&lt;ul&gt;
&lt;li&gt;eg. active 积极的；creative 创意的；attractive 有吸引力的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;副词后缀&quot;&gt;&lt;a href=&quot;#副词后缀&quot; class=&quot;headerlink&quot; title=&quot;副词后缀&quot;&gt;&lt;/a&gt;副词后缀&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-ly&lt;/code&gt; 表“程度、次序、某一时间”&lt;ul&gt;
&lt;li&gt;eg. happily 高兴的；badly 坏；recently 最近&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ward(s)&lt;/code&gt; 表“向……”&lt;ul&gt;
&lt;li&gt;eg. eastward 向东走；onward 向前；toward 朝&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-fold&lt;/code&gt; 表“倍数”&lt;ul&gt;
&lt;li&gt;eg. tenfold 十倍；hundredfold 百倍&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-wise&lt;/code&gt; 表“方式；方向；方面”&lt;ul&gt;
&lt;li&gt;eg. lengthwise 纵向的；education-wise 教育方向&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;动词后缀&quot;&gt;&lt;a href=&quot;#动词后缀&quot; class=&quot;headerlink&quot; title=&quot;动词后缀&quot;&gt;&lt;/a&gt;动词后缀&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-ate&lt;/code&gt; 表“成为、使化合”&lt;ul&gt;
&lt;li&gt;eg. chlorinate 用氯处理；hyphenate 用连接号连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-en&lt;/code&gt; 表“使有、变得有”&lt;ul&gt;
&lt;li&gt;eg. heighten （使）变高；darken 变黑；shorten 变短&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-fy/ify&lt;/code&gt; 表“使……成为、使有”&lt;ul&gt;
&lt;li&gt;eg. beautify 美化；purify 净化；solidify 使……变为固体&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ize&lt;/code&gt; 表“使……变成、使……化”&lt;ul&gt;
&lt;li&gt;eg. legalize 使合法化；computerize 电脑化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;英语的基本构词法主要包括词缀法、合成法、转换法。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;词缀法是派生法的一种主要构词法，它利用派生词缀和词根结合构成新词。&lt;/p&gt;
    
    </summary>
    
      <category term="英语" scheme="http://www.gcusky.com/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="读书笔记" scheme="http://www.gcusky.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>英语词汇文化内涵分类</title>
    <link href="http://www.gcusky.com/2016/04/27/english-1/"/>
    <id>http://www.gcusky.com/2016/04/27/english-1/</id>
    <published>2016-04-27T12:21:03.000Z</published>
    <updated>2016-04-27T12:21:37.172Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;《英语词汇学多维度探究》读书笔记之 英语词汇文化内涵分类&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;词语的文化内涵，是指词语中蕴含着某一民族或社会团体所固有的或特定的传统和思想特征。每一种文化都有无比鲜明的民族性，每个民族必定具备独有的特征。英语词汇具有丰富的文化内涵，反映了英美社会生活的方方面面。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;下面列举了一些例子：&lt;/p&gt;
&lt;h3 id=&quot;社会&quot;&gt;&lt;a href=&quot;#社会&quot; class=&quot;headerlink&quot; title=&quot;社会&quot;&gt;&lt;/a&gt;社会&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;hippies（嬉皮士）是老一代音乐家给年轻一代音乐家的一个绰号。而到了20世60年代，人们将这个词用于形容反主流文化的一批青年。&lt;/li&gt;
&lt;li&gt;American Dream（美国梦）指美国标榜的立国精神，人人自由和机会均等。&lt;/li&gt;
&lt;li&gt;blue boy 指经过变形手术由男性转变为女性的人。&lt;/li&gt;
&lt;li&gt;beefcake（男性健美照）cheesecake（女性健美照）Halfway house（康复医院）Pink Lady 是一种鸡尾酒名。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;政治&quot;&gt;&lt;a href=&quot;#政治&quot; class=&quot;headerlink&quot; title=&quot;政治&quot;&gt;&lt;/a&gt;政治&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;propaganda 具有贬义，因此我们不能把“宣传部”译为 Propaganda Department，而是 Publicity Department。&lt;/li&gt;
&lt;li&gt;politician在美国英语具有很强的贬义色彩，它是指为谋取个人私利而搞政治、耍手段的人；也指精明圆滑的人，指一个人做事说话信心十足，非常老练。&lt;br&gt;而statesman主要是指善于管理国家的明智之士，人们通常把有威望的高级官员称为statesman。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;传说、典故&quot;&gt;&lt;a href=&quot;#传说、典故&quot; class=&quot;headerlink&quot; title=&quot;传说、典故&quot;&gt;&lt;/a&gt;传说、典故&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;来自希腊神话的 the touch of Midas（点金术）Pandora’s box（灾祸之根源）Herculean task（艰巨的任务）hand by a thread（千钧一发）&lt;/li&gt;
&lt;li&gt;来自伊索寓言的 a dog in the manger（占着茅坑不拉屎）&lt;/li&gt;
&lt;li&gt;来自《圣经》的 as poor as the church mouse（像教堂里的老鼠一样穷）to escape by the skin of one’s teeth（幸免于难）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;动物&quot;&gt;&lt;a href=&quot;#动物&quot; class=&quot;headerlink&quot; title=&quot;动物&quot;&gt;&lt;/a&gt;动物&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;black sheep（指人干的事情让人无法接受，违背传统）&lt;/li&gt;
&lt;li&gt;to bell the cat（冒险，在危险中挺身而出，采取冒险行动）&lt;/li&gt;
&lt;li&gt;cold fish（为人冷漠、性情怪癖、很不合群的人）&lt;/li&gt;
&lt;li&gt;not even a dog’s chance（毫无机会）&lt;/li&gt;
&lt;li&gt;to put on the dog（摆排场给别人看）&lt;/li&gt;
&lt;li&gt;monkey business（不道德或不合法的行为）&lt;/li&gt;
&lt;li&gt;a horse laugh（不信任的嘲笑）&lt;/li&gt;
&lt;li&gt;like a duck in a thunderstorm（垂头丧气）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;颜色&quot;&gt;&lt;a href=&quot;#颜色&quot; class=&quot;headerlink&quot; title=&quot;颜色&quot;&gt;&lt;/a&gt;颜色&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;英语中的white常带有褒义，而black带有贬义。如white lie（善意的谎言）black lie（恶毒的谎言，诽谤）blackguard（恶棍）black list（黑名单）black mark（污点）black sheep（败家子）&lt;/li&gt;
&lt;li&gt;但black也有表示褒义的时候，如in the black（公司有盈余）&lt;/li&gt;
&lt;li&gt;其他颜色也具有各自文化内涵，如in the pink 形容那些看起来很健壮的马或指一个人身体健康；pink slip指“解雇工人的通知书”&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;食品&quot;&gt;&lt;a href=&quot;#食品&quot; class=&quot;headerlink&quot; title=&quot;食品&quot;&gt;&lt;/a&gt;食品&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;lemon 在美国英语中指质量很差，不起作用的东西。&lt;/li&gt;
&lt;li&gt;doggy bag 是人们把在饭馆里吃剩下来的饭菜装在里面带回家的袋子。&lt;/li&gt;
&lt;li&gt;in hot water 指某人或某些人遇到非常麻烦的问题。&lt;/li&gt;
&lt;li&gt;go bananas 意思是一些不愉快的事把人弄得十分烦躁，好像快要发疯了似的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;人体&quot;&gt;&lt;a href=&quot;#人体&quot; class=&quot;headerlink&quot; title=&quot;人体&quot;&gt;&lt;/a&gt;人体&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;to get cold feet 是指已决定做某件事，现在却畏缩害怕了&lt;/li&gt;
&lt;li&gt;to be led by the nose 指被人牵着鼻子走&lt;/li&gt;
&lt;li&gt;to pay through the nose 是指付出很高价钱或为付出的钱实在太多而感到心痛&lt;/li&gt;
&lt;li&gt;up to one’s ears 意思是很忙或完全介入某件事&lt;/li&gt;
&lt;li&gt;rubberneck 是指喜欢打听别人隐私的人、喜欢围观者&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h3&gt;&lt;p&gt;除了以上几种，英语词汇文化内涵还有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;来自运动场的，如 to pull your socks up（振作起来）to knock your socks off（使人感到非常震惊）&lt;/li&gt;
&lt;li&gt;有来自扑克牌游戏的，如 poker face（脸上毫无表情、不漏声色）to sweeten the pot（为了一个提议更有吸引力而在原有条件的基础上增加一些对对方有利的条件）&lt;/li&gt;
&lt;li&gt;有来自航空用语的，如 right on the beam（一个人做某件事做得很对）&lt;/li&gt;
&lt;li&gt;有来自电影、音乐的，如 bomb（不成功、不受欢迎、卖座率很低）&lt;/li&gt;
&lt;li&gt;有来自战争的，如 to burn one’s bridges（采取行动不留退路、没有改弦的可能）D-day（计划行动开始日，该词来自二战）&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;《英语词汇学多维度探究》读书笔记之 英语词汇文化内涵分类&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;词语的文化内涵，是指词语中蕴含着某一民族或社会团体所固有的或特定的传统和思想特征。每一种文化都有无比鲜明的民族性，每个民族必定具备独有的特征。英语词汇具有丰富的文化内涵，反映了英美社会生活的方方面面。&lt;/p&gt;
    
    </summary>
    
      <category term="英语" scheme="http://www.gcusky.com/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="读书笔记" scheme="http://www.gcusky.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>JUnit 黑盒测试</title>
    <link href="http://www.gcusky.com/2016/04/26/junit-2/"/>
    <id>http://www.gcusky.com/2016/04/26/junit-2/</id>
    <published>2016-04-26T08:47:57.000Z</published>
    <updated>2016-04-26T09:56:30.424Z</updated>
    
    <content type="html">&lt;p&gt;测试输入年月日数据是否合法，使用等价类划分、边界值测试等方法。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;等价类划分&quot;&gt;&lt;a href=&quot;#等价类划分&quot; class=&quot;headerlink&quot; title=&quot;等价类划分&quot;&gt;&lt;/a&gt;等价类划分&lt;/h3&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td rowspan=&quot;5&quot;&gt;年&lt;/td&gt;&lt;td&gt;数字范围&lt;/td&gt;&lt;td&gt;1500~2050&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot;&gt;有效等价类&lt;/td&gt;&lt;td&gt;1500~2050，且是平年，如1997，2015&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1500~2050，且是闰年，如2000，2016&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot;&gt;无效等价类&lt;/td&gt;&lt;td&gt;2050以上&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1500以下&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;6&quot;&gt;月&lt;/td&gt;&lt;td&gt;数字范围&lt;/td&gt;&lt;td&gt;1~12&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;3&quot;&gt;有效等价类&lt;/td&gt;&lt;td&gt;1、3、5、7、8、10、12&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4、6、9、11&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot;&gt;无效等价类&lt;/td&gt;&lt;td&gt;1以下&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;12以上&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;7&quot;&gt;日&lt;/td&gt;&lt;td&gt;数字范围&lt;/td&gt;&lt;td&gt;1～31&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;4&quot;&gt;有效等价类&lt;/td&gt;&lt;td&gt;1～28&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;29&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;30&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;31&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot;&gt;无效等价类&lt;/td&gt;&lt;td&gt;1以下&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;31以上&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;h3 id=&quot;设计测试用例&quot;&gt;&lt;a href=&quot;#设计测试用例&quot; class=&quot;headerlink&quot; title=&quot;设计测试用例&quot;&gt;&lt;/a&gt;设计测试用例&lt;/h3&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th colspan=&quot;4&quot;&gt;输入&lt;/th&gt;&lt;th rowspan=&quot;2&quot;&gt;预期输出&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;编号&lt;/th&gt;&lt;th&gt;年&lt;/th&gt;&lt;th&gt;月&lt;/th&gt;&lt;th&gt;日&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2005&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;2052&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1900&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2005&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2005&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2005&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;35&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;2005&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;h3 id=&quot;受测试代码&quot;&gt;&lt;a href=&quot;#受测试代码&quot; class=&quot;headerlink&quot; title=&quot;受测试代码&quot;&gt;&lt;/a&gt;受测试代码&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ValidDate&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isLeap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; year)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;//判断是否为闰年&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (((year % &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; (year % &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) || (year % &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validDayRange&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; day)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;//判断Day的有效性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((day&amp;gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;amp;&amp;amp;(day&amp;lt;=&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;The day is valid day:&quot;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;Day=&quot;&lt;/span&gt;+day);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((day&amp;lt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)||(day&amp;gt;&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;The day is INvalid day:&quot;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;Day=&quot;&lt;/span&gt;+day);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validMonthRange&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; month)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;//判断month的有效性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((month&amp;gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;amp;&amp;amp;(month&amp;lt;=&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;The month is valid month:&quot;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;Month=&quot;&lt;/span&gt;+month);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((month&amp;lt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)||(month&amp;gt;&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;The month is INvalid day:&quot;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;Month=&quot;&lt;/span&gt;+month);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validYearRange&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; year)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;//判断year的有效性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((year&amp;gt;=&lt;span class=&quot;number&quot;&gt;1500&lt;/span&gt;)&amp;amp;&amp;amp;(year&amp;lt;=&lt;span class=&quot;number&quot;&gt;2050&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;The year is valid year:&quot;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;Year=&quot;&lt;/span&gt;+year);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((year&amp;lt;&lt;span class=&quot;number&quot;&gt;1500&lt;/span&gt;)||(year&amp;gt;&lt;span class=&quot;number&quot;&gt;2050&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;The year is INvalid year:&quot;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;Year=&quot;&lt;/span&gt;+year);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &lt;span class=&quot;comment&quot;&gt;//判断年月日的组合是否有效（是否遗漏了30天，月份不能为1,3,5,7,8,10,12；28天2月不是平年）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validCombine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; day,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; month,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; year)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//如果天数是31天，但月份却是2、4、6、9、11，这是无效的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((day==&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;)&amp;amp;&amp;amp;((month==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)||(month==&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)||(month==&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)||(month==&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;)||(month==&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;日期=&quot;&lt;/span&gt;+day+&lt;span class=&quot;string&quot;&gt;&quot;不可能出现在&quot;&lt;/span&gt;+month);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//如果天数是30天，但月份却是2，这是无效的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((day==&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;)&amp;amp;&amp;amp;(month==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;日期=&quot;&lt;/span&gt;+day+&lt;span class=&quot;string&quot;&gt;&quot;不可能出现在二月&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//如果天数是29天，月份却是2，却不是闰年，这是无效的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((day==&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;)&amp;amp;&amp;amp;(month==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&amp;amp;&amp;amp;(isLeap(year))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;日期=&quot;&lt;/span&gt;+day+&lt;span class=&quot;string&quot;&gt;&quot;不可能出现在二月&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//综合判断各函数的有效性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; day,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; month,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; year)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(validDayRange(day)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!validMonthRange(month)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!validYearRange(year)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!validCombine(day,month,year)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;编写测试类&quot;&gt;&lt;a href=&quot;#编写测试类&quot; class=&quot;headerlink&quot; title=&quot;编写测试类&quot;&gt;&lt;/a&gt;编写测试类&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; org.junit.Assert.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.After;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Before;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ValidDateTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@After&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testIsLeap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;isLeap:判断是否为闰年&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result1=ValidDate.isLeap(&lt;span class=&quot;number&quot;&gt;1600&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result2=ValidDate.isLeap(&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result3=ValidDate.isLeap(&lt;span class=&quot;number&quot;&gt;1900&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result4=ValidDate.isLeap(&lt;span class=&quot;number&quot;&gt;2049&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第1条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第2条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第3条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第4条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testValidDayRange&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;validDayRange:判断Day的有效性&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result1=ValidDate.validDayRange(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result2=ValidDate.validDayRange(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result3=ValidDate.validDayRange(&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result4=ValidDate.validDayRange(&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result5=ValidDate.validDayRange(&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第1条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第2条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第3条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第4条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第5条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result5);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testValidMonthRange&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;validMonthRange:判断month的有效性&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result1=ValidDate.validMonthRange(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result2=ValidDate.validMonthRange(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result3=ValidDate.validMonthRange(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result4=ValidDate.validMonthRange(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result5=ValidDate.validMonthRange(&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第1条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第2条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第3条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第4条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第5条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result5);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testValidYearRange&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;validYearRange:判断year的有效性&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result1=ValidDate.validYearRange(&lt;span class=&quot;number&quot;&gt;1499&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result2=ValidDate.validYearRange(&lt;span class=&quot;number&quot;&gt;1500&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result3=ValidDate.validYearRange(&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result4=ValidDate.validYearRange(&lt;span class=&quot;number&quot;&gt;2050&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result5=ValidDate.validYearRange(&lt;span class=&quot;number&quot;&gt;2051&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第1条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第2条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第3条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第4条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第5条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result5);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testValidCombine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;validCombine:判断年月日的组合是否有效&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result1=ValidDate.validCombine(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result2=ValidDate.validCombine(&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result3=ValidDate.validCombine(&lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result4=ValidDate.validCombine(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result5=ValidDate.validCombine(&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result6=ValidDate.validCombine(&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第1条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第2条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第3条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第4条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第5条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result5);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第6条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result6);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testValidate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;validate:综合判断各函数的有效性&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result1=ValidDate.validate(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2005&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result2=ValidDate.validate(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2052&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result3=ValidDate.validate(&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1900&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result4=ValidDate.validate(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2005&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result5=ValidDate.validate(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2005&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result6=ValidDate.validate(&lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2005&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; result7=ValidDate.validate(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2005&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第1条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;,result1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第2条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第3条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第4条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第5条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result5);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第6条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result6);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;第7条数据有问题&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,result7);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;结果分析&quot;&gt;&lt;a href=&quot;#结果分析&quot; class=&quot;headerlink&quot; title=&quot;结果分析&quot;&gt;&lt;/a&gt;结果分析&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//第03行 错误1：((year % 4 ==0) &amp;amp;&amp;amp; (year % 400 != 0)) || (year % 400 ==0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//修正：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (((year % &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; (year % &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) || (year % &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//第57行 错误2：(day==29)&amp;amp;&amp;amp;(month==2)&amp;amp;&amp;amp;(isLeap(year))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//修正：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((day==&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;)&amp;amp;&amp;amp;(month==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&amp;amp;&amp;amp;(!isLeap(year))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;日期=&quot;&lt;/span&gt;+day+&lt;span class=&quot;string&quot;&gt;&quot;不可能出现在二月&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//第65行 错误3：if(validDayRange(day)) return false;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//修正：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!validDayRange(day)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;测试输入年月日数据是否合法，使用等价类划分、边界值测试等方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JUnit" scheme="http://www.gcusky.com/tags/JUnit/"/>
    
      <category term="软件测试" scheme="http://www.gcusky.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
      <category term="黑盒测试" scheme="http://www.gcusky.com/tags/%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>英语发展历史</title>
    <link href="http://www.gcusky.com/2016/04/26/english/"/>
    <id>http://www.gcusky.com/2016/04/26/english/</id>
    <published>2016-04-26T08:00:14.000Z</published>
    <updated>2016-04-27T12:21:47.103Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;《英语词汇学多维度探究》读书笔记之 英语发展历史&lt;/code&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;古英语时期&quot;&gt;&lt;a href=&quot;#古英语时期&quot; class=&quot;headerlink&quot; title=&quot;古英语时期&quot;&gt;&lt;/a&gt;古英语时期&lt;/h2&gt;&lt;p&gt;古英语词汇大约有24000个词项，但其中大约85%不再使用，且保留下来的基本概念词汇的拼写与现代英语是不同的，就不讨论古英语词汇的特点了。不过在古英语时期，有两个重要的历史事件在很大程度上影响着英语词汇的发展。&lt;/p&gt;
&lt;h3 id=&quot;基督教的传入&quot;&gt;&lt;a href=&quot;#基督教的传入&quot; class=&quot;headerlink&quot; title=&quot;基督教的传入&quot;&gt;&lt;/a&gt;基督教的传入&lt;/h3&gt;&lt;p&gt;第一个事件是基督教的传入，罗马文化和一些拉丁词汇进入英语。&lt;/p&gt;
&lt;h3 id=&quot;纳维亚人的入侵&quot;&gt;&lt;a href=&quot;#纳维亚人的入侵&quot; class=&quot;headerlink&quot; title=&quot;纳维亚人的入侵&quot;&gt;&lt;/a&gt;纳维亚人的入侵&lt;/h3&gt;&lt;p&gt;第二个时间是北欧斯纳的纳维亚人的入侵。从公元790年开始，大批斯纳的纳维亚人来到英国并在此定居。随着斯纳的纳维亚人和英国人的频繁交往，大量斯纳的纳维亚语言的词汇进入英语。&lt;/p&gt;
&lt;h2 id=&quot;中古英语时期&quot;&gt;&lt;a href=&quot;#中古英语时期&quot; class=&quot;headerlink&quot; title=&quot;中古英语时期&quot;&gt;&lt;/a&gt;中古英语时期&lt;/h2&gt;&lt;h3 id=&quot;历史背景——“诺曼征服”&quot;&gt;&lt;a href=&quot;#历史背景——“诺曼征服”&quot; class=&quot;headerlink&quot; title=&quot;历史背景——“诺曼征服”&quot;&gt;&lt;/a&gt;历史背景——“诺曼征服”&lt;/h3&gt;&lt;p&gt;1066年，法国诺曼人在威廉公爵的率领下，横渡英吉利海峡，征服英国。历史上将这一事件称为“诺曼征服”（the Norman Conquest）。从此，英国结束了分裂状态，置于中央集权的封建制度统治之下。在随后的近200年间，英国变成了一个双语国家，诺曼法语是贵族语言，英语是普通民众的日常语言。&lt;br&gt;1204年英王失去了在法国诺曼底地区的领地，这一事件成为中古英语时期的一条分界线。其后，英语逐渐恢复主导地位。&lt;/p&gt;
&lt;h3 id=&quot;词汇特点——借词的三种情况&quot;&gt;&lt;a href=&quot;#词汇特点——借词的三种情况&quot; class=&quot;headerlink&quot; title=&quot;词汇特点——借词的三种情况&quot;&gt;&lt;/a&gt;词汇特点——借词的三种情况&lt;/h3&gt;&lt;p&gt;在词汇方面，中古英语的一个显著特点是法语词的出现，这些法语往往涉及&lt;strong&gt;与统治阶级有关&lt;/strong&gt;的领域，如政治、法律、宗教、军事社交、服饰、饮食等。比如英语中的indict（起诉）、jury（陪审团）、verdict（裁决）等法律术语都源于法语词。&lt;br&gt;这一变化对英语词汇的发展产生了深远的影响，为日后希腊语词、拉丁语词进入英语铺平了道路，这种借词主要有一下三种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;法语词替代一些古英语词，如法语的uncle替代英语词eam。&lt;/li&gt;
&lt;li&gt;法语词和古英语词合成新词，如法语的gentle和日耳曼语的man构成gentleman。&lt;/li&gt;
&lt;li&gt;意义相同的法语词和英语词同时保留在现代英语中。eg：&lt;ul&gt;
&lt;li&gt;法 judgment 英 doom –》 判定&lt;/li&gt;
&lt;li&gt;法 mansion 英 house –》 住宅、房子&lt;/li&gt;
&lt;li&gt;法 demand 英 ask –》要求、询问、查问&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;中古英语后半期&quot;&gt;&lt;a href=&quot;#中古英语后半期&quot; class=&quot;headerlink&quot; title=&quot;中古英语后半期&quot;&gt;&lt;/a&gt;中古英语后半期&lt;/h3&gt;&lt;p&gt;在中古英语后半期，英语的主要变化是&lt;strong&gt;法语词汇大量涌入和曲折变化进一步消失&lt;/strong&gt;。随着众多的法语借词被吸收进英语，一些法语和拉丁语的词缀被英语化，成为英语构词的重要素材。eg.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;前缀&lt;/th&gt;
&lt;th&gt;前缀&lt;/th&gt;
&lt;th&gt;后缀&lt;/th&gt;
&lt;th&gt;后缀&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;dis- → distrust 不信任&lt;/td&gt;
&lt;td&gt;en- → enrich 使丰富&lt;/td&gt;
&lt;td&gt;-al → rehearsal 排练&lt;/td&gt;
&lt;td&gt;-able → believable 可相信的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;inter- → intermingle 使混合&lt;/td&gt;
&lt;td&gt;non- → nonage 青年时期&lt;/td&gt;
&lt;td&gt;-ancy → vacancy 空白&lt;/td&gt;
&lt;td&gt;-ance → hindrance 障碍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pre- → preconceive 预想&lt;/td&gt;
&lt;td&gt;re- → reenter 再进入&lt;/td&gt;
&lt;td&gt;-ician → geometrician 几何学家&lt;/td&gt;
&lt;td&gt;-ory → transitory 暂时的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;semi- → semi-circle 半圆&lt;/td&gt;
&lt;td&gt;sub- → subtenant 转租人&lt;/td&gt;
&lt;td&gt;　&lt;/td&gt;
&lt;td&gt;　&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;在构词方面，复合词和派生词形式继续大量使用，还得到了很大的发展。&lt;/li&gt;
&lt;li&gt;在复合词的构成形式方面，一些法语特色进入英语中，eg. knight 与法语形容词 errant 构成 knight-errant“游侠骑士”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因而，这就可以解释下述现象：&lt;strong&gt;从谱系关系来看，英语与德语同族，但现代英语的词汇则与法语更为相近。&lt;/strong&gt;但总体上任然是以日耳曼语为基础。&lt;/p&gt;
&lt;h2 id=&quot;现代英语时期&quot;&gt;&lt;a href=&quot;#现代英语时期&quot; class=&quot;headerlink&quot; title=&quot;现代英语时期&quot;&gt;&lt;/a&gt;现代英语时期&lt;/h2&gt;&lt;h3 id=&quot;早期现代英语&quot;&gt;&lt;a href=&quot;#早期现代英语&quot; class=&quot;headerlink&quot; title=&quot;早期现代英语&quot;&gt;&lt;/a&gt;早期现代英语&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;文艺复兴运动对英语词汇的发展产生了巨大的影响。&lt;/li&gt;
&lt;li&gt;文艺复兴晚期，《圣经》（_King Jame Bible_）和莎士比亚作品更是起到非常大的作用。&lt;br&gt;&lt;strong&gt;《圣经》&lt;/strong&gt;主要是有许多人们耳熟能详的习语表达：a wolf in sheep’s clothing（披着羊皮的狼）、new wine in old bottles（旧瓶装新酒）等。&lt;br&gt;&lt;strong&gt;莎士比亚的诗歌与戏剧&lt;/strong&gt;中使用了大量的新词：pedant（书呆子）、dwindle（缩小）、majestic（威严的）、flesh and blood（血肉之躯）等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;后期现代英语&quot;&gt;&lt;a href=&quot;#后期现代英语&quot; class=&quot;headerlink&quot; title=&quot;后期现代英语&quot;&gt;&lt;/a&gt;后期现代英语&lt;/h3&gt;&lt;p&gt;从1800年至今都属于后期现代英语时期。在这一时期，&lt;strong&gt;英国对世界贸易的控制，殖民地的独立斗争，世界大战的爆发，美国的迅速崛起&lt;/strong&gt;等历史事件对英语产生了重大影响。&lt;br&gt;大体上看，后期现代英语与早期现代英语的最大区别体现在词汇层面，而两者在语言、拼写和语法差异不大。&lt;br&gt;从词汇角度来说，后期现代英语主要特征表现为以下三个方面：&lt;/p&gt;
&lt;p&gt;一. 科技词汇的空前增长&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;科技领域&lt;/th&gt;
&lt;th&gt;新生词汇&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;物理学&lt;/td&gt;
&lt;td&gt;nuclear weapons（核武器）meltdown（核泄漏）atomic energy（原子能）chain reaction（连锁反应）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;医学&lt;/td&gt;
&lt;td&gt;clinic（诊所）protein（蛋白质）AIDS（艾滋病）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;心理学&lt;/td&gt;
&lt;td&gt;introvert（内向）extrovert（外向）psychoanalysis（心理分析）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;新闻广播学&lt;/td&gt;
&lt;td&gt;broadcast（广播）announcer（播音员）microphone（麦克风）loudspeaker（扬声器）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;汽车&lt;/td&gt;
&lt;td&gt;automobile（小汽车）garage（车库）petrol（汽油）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;计算机&lt;/td&gt;
&lt;td&gt;microprocessor（微处理机）software（软件）download（下载）cyberspace（网路空间）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;二. 美国英语地位的确立&lt;br&gt;三. 多种新英语变体的出现【英语区域化过程中，受地区语言的影响】&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;《英语词汇学多维度探究》读书笔记之 英语发展历史&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="英语" scheme="http://www.gcusky.com/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="读书笔记" scheme="http://www.gcusky.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>纵切碎纸片复原的简单实现</title>
    <link href="http://www.gcusky.com/2016/04/23/matlab-1/"/>
    <id>http://www.gcusky.com/2016/04/23/matlab-1/</id>
    <published>2016-04-23T11:48:38.000Z</published>
    <updated>2016-04-23T12:04:11.657Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.shumo.com/wiki/doku.php?id=2013_%E5%B9%B4%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B_cumcm_%E8%AF%95%E9%A2%98&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2013 年全国大学生数学建模竞赛(CUMCM)B题：碎纸片的拼接复原 【问题一】&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题思路&quot;&gt;&lt;a href=&quot;#问题思路&quot; class=&quot;headerlink&quot; title=&quot;问题思路&quot;&gt;&lt;/a&gt;问题思路&lt;/h3&gt;&lt;p&gt;对处于纸条边缘的像素点进行取值，分割出边缘部分的像素点的值，再将不同的碎纸片的边缘灰度值相减，求出方差。通过比较方差确定纸片的匹配度，将匹配度高的组合到一起。&lt;code&gt;简单解决&lt;/code&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;匹配度计算效果&quot;&gt;&lt;a href=&quot;#匹配度计算效果&quot; class=&quot;headerlink&quot; title=&quot;匹配度计算效果&quot;&gt;&lt;/a&gt;匹配度计算效果&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/math/matlab-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;代码实现&quot;&gt;&lt;a href=&quot;#代码实现&quot; class=&quot;headerlink&quot; title=&quot;代码实现&quot;&gt;&lt;/a&gt;代码实现&lt;/h3&gt;&lt;figure class=&quot;highlight matlab&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;%&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dirs：碎纸图类型 &amp;lt;19x1 struct&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Atc：碎纸图存储，三维数组 &amp;lt;1980x72x19 uint8&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LengthFiles：碎纸图数量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Atc_l Atc_r：左右列向量，二维数组 &amp;lt;1980x19 uint8&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fzz：19*19标准差矩阵 &amp;lt;19x19 double&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fc_2：排列前相对最适匹配图，一维数组 &amp;lt;1x19 double&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fd：排列好的图，一维数组 &amp;lt;1x19 double&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    x y：中间变量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ans&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;mytest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(~)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dirName =&lt;span class=&quot;string&quot;&gt;&#39;B\附件1\&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dirs=dir(strcat(dirName,&#39;&lt;/span&gt;*.bmp&#39;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LengthFiles = &lt;span class=&quot;built_in&quot;&gt;length&lt;/span&gt;(dirs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:LengthFiles;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Atc(:,:,x) = imread(strcat(dirName,dirs(x).name));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y = Atc(:,:,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Atc_r(:,x) = y(:,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Atc_l(:,x) = y(:,&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;:&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:LengthFiles;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; y = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:LengthFiles;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fzz(x,y) = std2(Atc_r(:,x)-Atc_l(:,y));	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fzz(fzz==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y=fzz&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [x,fc_2] = min(fzz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [y,x] = min(y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [x,fd(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)] = max(y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:LengthFiles;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fd(x) = fc_2(fd(x&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;ans&lt;/span&gt; = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:LengthFiles;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;ans&lt;/span&gt; = [ans Atc(:,:,fd(x))];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;%hold on;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imshow(&lt;span class=&quot;built_in&quot;&gt;ans&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;拼接效果&quot;&gt;&lt;a href=&quot;#拼接效果&quot; class=&quot;headerlink&quot; title=&quot;拼接效果&quot;&gt;&lt;/a&gt;拼接效果&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/math/matlab-2.jpg?imageView/2/w/700&quot; alt=&quot;拼接前&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/math/matlab-3.jpg?imageView/2/w/700&quot; alt=&quot;拼接后&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.shumo.com/wiki/doku.php?id=2013_%E5%B9%B4%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B_cumcm_%E8%AF%95%E9%A2%98&quot;&gt;2013 年全国大学生数学建模竞赛(CUMCM)B题：碎纸片的拼接复原 【问题一】&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题思路&quot;&gt;&lt;a href=&quot;#问题思路&quot; class=&quot;headerlink&quot; title=&quot;问题思路&quot;&gt;&lt;/a&gt;问题思路&lt;/h3&gt;&lt;p&gt;对处于纸条边缘的像素点进行取值，分割出边缘部分的像素点的值，再将不同的碎纸片的边缘灰度值相减，求出方差。通过比较方差确定纸片的匹配度，将匹配度高的组合到一起。&lt;code&gt;简单解决&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="MATLAB" scheme="http://www.gcusky.com/categories/MATLAB/"/>
    
    
      <category term="数学建模" scheme="http://www.gcusky.com/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
      <category term="MATLAB" scheme="http://www.gcusky.com/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>JUnit 参数化测试和打包测试</title>
    <link href="http://www.gcusky.com/2016/04/19/junit-1/"/>
    <id>http://www.gcusky.com/2016/04/19/junit-1/</id>
    <published>2016-04-19T13:40:47.000Z</published>
    <updated>2016-04-19T13:49:00.363Z</updated>
    
    <content type="html">&lt;p&gt;学习了JUnit &lt;strong&gt;参数化测试&lt;/strong&gt;和&lt;strong&gt;打包测试&lt;/strong&gt;两种更高效的方法&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;测试计算圆的面积与周长类&quot;&gt;&lt;a href=&quot;#测试计算圆的面积与周长类&quot; class=&quot;headerlink&quot; title=&quot;测试计算圆的面积与周长类&quot;&gt;&lt;/a&gt;测试计算圆的面积与周长类&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Circle&lt;/code&gt;类中有两个方法：&lt;code&gt;Area1(r)&lt;/code&gt;求圆形面积，&lt;code&gt;Perimeter(r)&lt;/code&gt;求圆形周长。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Circle&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Area1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; r)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(r&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; r*r*Math.PI;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Perimeter1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; r)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(r&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*r*Math.PI;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;选中&lt;code&gt;Circle.java&lt;/code&gt;，右键，New-&amp;gt;JUnit Test Case.勾选&lt;code&gt;SetUp()&lt;/code&gt; &lt;code&gt;TearDown()&lt;/code&gt;方法，为Area1方法和Perimeter1方法分别写出测试用例。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; org.junit.Assert.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.After;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Before;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CircleTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Circle circle = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Circle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@After&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testArea1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;number&quot;&gt;12.56&lt;/span&gt;, circle.Area1(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;), &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testPerimeter1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;number&quot;&gt;12.56&lt;/span&gt;, circle.Perimeter1(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;), &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参数化测试&quot;&gt;&lt;a href=&quot;#参数化测试&quot; class=&quot;headerlink&quot; title=&quot;参数化测试&quot;&gt;&lt;/a&gt;参数化测试&lt;/h3&gt;&lt;p&gt;首先，我们仅测试圆的周长方法&lt;code&gt;Perimeter1(r)&lt;/code&gt;。暂且分三类：正数、0、负数。可以最少同时运行三条测试用例。&lt;code&gt;@RunWith(Parameterized.class)&lt;/code&gt;这条语句就是为这个类指定了一个&lt;code&gt;ParameterizedRunner&lt;/code&gt;。&lt;br&gt;第二步，定义一个待测试的类，并且定义两个变量，一个用于存放参数，一个用于存放期待的结果。&lt;br&gt;接下来，定义测试数据的集合，也就是上述的&lt;code&gt;data()&lt;/code&gt;方法，该方法可以任意命名，但是必须使用&lt;code&gt;@Parameters&lt;/code&gt;标注进行修饰。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; org.junit.Assert.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Arrays;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Collection;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.runner.RunWith;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.runners.Parameterized;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.runners.Parameterized.Parameters;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@RunWith&lt;/span&gt;(Parameterized.class)&lt;span class=&quot;comment&quot;&gt;//为下面的参数化类Perimeter1Test指定特殊运行器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Perimeter1Test&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Circle Circle = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Circle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; param;&lt;span class=&quot;comment&quot;&gt;//参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; result;&lt;span class=&quot;comment&quot;&gt;//期望值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Parameters&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//参数准备，以@Parameters标识，返回值为Collection类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Collection &lt;span class=&quot;title&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Arrays.asList(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Object[][]&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//在该静态方法中声明所有需要测试的参数对，以数组形式存放&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;12.56&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;-&lt;span class=&quot;number&quot;&gt;2.4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//构造函数，对变量进行初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Perimeter1Test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; param,&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; result)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.param=param;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.result=result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//测试方法，使用前面定义的变量作为参数进行测试&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Perimeter11&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertEquals(result,Circle.Perimeter1(param),&lt;span class=&quot;number&quot;&gt;0.11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;result=&quot;&lt;/span&gt;+Circle.Perimeter1(param));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;打包测试&quot;&gt;&lt;a href=&quot;#打包测试&quot; class=&quot;headerlink&quot; title=&quot;打包测试&quot;&gt;&lt;/a&gt;打包测试&lt;/h3&gt;&lt;p&gt;通过前面的介绍我们可以感觉到，在一个项目中，只写一个测试类是不可能的，我们会写出很多很多个测试类。可是这些测试类必须一个一个的执行，也是比较麻烦的事情。鉴于此，JUnit为我们提供了打包测试的功能，将所有需要运行的测试类集中起来，一次性的运行完毕，大大的方便了我们的测试工作。具体代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.runner.RunWith;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.runners.Suite;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@RunWith&lt;/span&gt;(Suite.class) &lt;span class=&quot;comment&quot;&gt;//@RunWith标注传递一个参数 Suite.class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Suite&lt;/span&gt;.SuiteClasses(&amp;#123;&lt;span class=&quot;comment&quot;&gt;//@Suite.SuiteClasses，来表明这个类是打包测试类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CircleTest.class,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Perimeter1Test.class&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AllTests&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个功能也需要使用一个特殊的&lt;code&gt;Runner&lt;/code&gt;，因此我们需要向&lt;code&gt;@RunWith&lt;/code&gt;标注传递一个参数&lt;code&gt;Suite.class&lt;/code&gt;。同时，我们还需要另外一个标注&lt;code&gt;@Suite.SuiteClasses&lt;/code&gt;，来表明这个类是一个打包测试类。我们把需要打包的类作为参数传递给该标注就可以了。有了这两个标注之后，就已经完整的表达了所有的含义，因此下面的类已经无关紧要，随便起一个类名，内容全部为空既可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;学习了JUnit &lt;strong&gt;参数化测试&lt;/strong&gt;和&lt;strong&gt;打包测试&lt;/strong&gt;两种更高效的方法&lt;/p&gt;
    
    </summary>
    
    
      <category term="JUnit" scheme="http://www.gcusky.com/tags/JUnit/"/>
    
      <category term="软件测试" scheme="http://www.gcusky.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
      <category term="白盒测试" scheme="http://www.gcusky.com/tags/%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>JUnit 初体验</title>
    <link href="http://www.gcusky.com/2016/04/18/junit/"/>
    <id>http://www.gcusky.com/2016/04/18/junit/</id>
    <published>2016-04-18T13:18:57.000Z</published>
    <updated>2016-04-19T13:40:24.371Z</updated>
    
    <content type="html">&lt;p&gt;JUnit是为Java程序开发者实现单元测试提供的一种框架。JUnit的一大主要特点是，它在执行的时候，各个方法之间是相互独立的，一个方法的失败不会导致别的方法失败，方法之间也不存在相互依赖的关系，彼此是相互独立的。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;利用JUnit测试计算器程序&quot;&gt;&lt;a href=&quot;#利用JUnit测试计算器程序&quot; class=&quot;headerlink&quot; title=&quot;利用JUnit测试计算器程序&quot;&gt;&lt;/a&gt;利用JUnit测试计算器程序&lt;/h2&gt;&lt;p&gt;测试Calculator类所有方法（仅有整数计算）&lt;/p&gt;
&lt;h3 id=&quot;Calculator-java&quot;&gt;&lt;a href=&quot;#Calculator-java&quot; class=&quot;headerlink&quot; title=&quot;Calculator.java&quot;&gt;&lt;/a&gt;Calculator.java&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Calculator&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; result;    &lt;span class=&quot;comment&quot;&gt;//静态变量，用于存储运行结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		result=result+n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;substract&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		result=result-n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;multiply&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		result=result*n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;divide&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		result=result/n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		result=n*n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;squareRoot&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=n/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(n==i*i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				result=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		result=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//将结果清零&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getResult&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;CalculatorTest-java&quot;&gt;&lt;a href=&quot;#CalculatorTest-java&quot; class=&quot;headerlink&quot; title=&quot;CalculatorTest.java&quot;&gt;&lt;/a&gt;CalculatorTest.java&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; org.junit.Assert.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.After;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Before;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Ignore;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.internal.runners.TestClassRunner;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.runner.RunWith;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@RunWith&lt;/span&gt;(TestClassRunner.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CalculatorTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Calculator calculator=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Calculator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Before&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//每一个测试之前执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculator.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@After&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//每一个测试之后执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;(timeout=&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//设置超时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testAdd&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculator.add(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculator.add(&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;, calculator.getResult());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;(timeout=&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testSubstract&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculator.add(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculator.substract(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;,calculator.getResult());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;(timeout=&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testMultiply&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculator.add(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculator.multiply(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;,calculator.getResult());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;(timeout=&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testDivide&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculator.add(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculator.divide(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,calculator.getResult());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;(timeout=&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testSquare&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculator.square(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;,calculator.getResult());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;(timeout=&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testSquareRoot&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculator.squareRoot(&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,calculator.getResult());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;利用JUnit测试Point2D&quot;&gt;&lt;a href=&quot;#利用JUnit测试Point2D&quot; class=&quot;headerlink&quot; title=&quot;利用JUnit测试Point2D&quot;&gt;&lt;/a&gt;利用JUnit测试Point2D&lt;/h2&gt;&lt;p&gt;Point2D（用于计算两点之间的距离）&lt;/p&gt;
&lt;h3 id=&quot;Point2D-java&quot;&gt;&lt;a href=&quot;#Point2D-java&quot; class=&quot;headerlink&quot; title=&quot;Point2D.java&quot;&gt;&lt;/a&gt;Point2D.java&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Point2D&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; distance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;distanceFrom&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a1, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b1, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a2, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b2)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		distance = Math.sqrt(Math.pow(a1-a2, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)+Math.pow(b1-b2, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;distanceFromOrigin&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		distance = Math.sqrt(Math.pow(a, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)+Math.pow(b, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Point2D-java-1&quot;&gt;&lt;a href=&quot;#Point2D-java-1&quot; class=&quot;headerlink&quot; title=&quot;Point2D.java&quot;&gt;&lt;/a&gt;Point2D.java&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; org.junit.Assert.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.After;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Before;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Point2DTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Point2D x = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Point2D();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@After&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;(timeout=&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testDistanceFrom&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		x.distanceFrom(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, x.distance, &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;(timeout=&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testDistanceFromOrigin&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		x.distanceFromOrigin(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, x.distance, &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;JUnit是为Java程序开发者实现单元测试提供的一种框架。JUnit的一大主要特点是，它在执行的时候，各个方法之间是相互独立的，一个方法的失败不会导致别的方法失败，方法之间也不存在相互依赖的关系，彼此是相互独立的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JUnit" scheme="http://www.gcusky.com/tags/JUnit/"/>
    
      <category term="软件测试" scheme="http://www.gcusky.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
      <category term="白盒测试" scheme="http://www.gcusky.com/tags/%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>NYOJ 587-blockhouses | ZOJ 1002-Fire Net</title>
    <link href="http://www.gcusky.com/2016/04/18/acm-11/"/>
    <id>http://www.gcusky.com/2016/04/18/acm-11/</id>
    <published>2016-04-18T12:46:14.000Z</published>
    <updated>2016-04-20T04:57:25.847Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;题目来源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;NYOJ 587-blockhouses &lt;a href=&quot;http://acm.nyist.net/JudgeOnline/problem.php?pid=587&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://acm.nyist.net/JudgeOnline/problem.php?pid=587&lt;/a&gt;&lt;br&gt;ZOJ 1002-Fire Net &lt;a href=&quot;http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=1002&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=1002&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;时间限制：1000 ms  |  内存限制：65535 KB  |  难度：3&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Suppose that we have a square city with straight streets. A map of a city is a square board with n rows and n columns, each representing a street or a piece of wall.&lt;br&gt;假设我们有一个正方形的城市街道。城市由一个n*n的方块组成，每一个方块代表一个街道或一块墙。&lt;/p&gt;
&lt;p&gt;A blockhouse is a small castle that has four openings through which to shoot. The four openings are facing North, East, South, and West, respectively. There will be one machine gun shooting through each opening.&lt;br&gt;一个碉堡是一个小城堡，有四个开口用以射击。四个开口分别面向北、东、南、西。每一个开口都将有一台用以射击的机枪。&lt;/p&gt;
&lt;p&gt;Here we assume that a bullet is so powerful that it can run across any distance and destroy a blockhouse on its way. On the other hand, a wall is so strongly built that can stop the bullets.&lt;br&gt;在这里，我们假定子弹强大到可以毁灭弹道上任何距离的碉堡。另一方面，墙很坚固，可以阻挡子弹。&lt;/p&gt;
&lt;p&gt;The goal is to place as many blockhouses in a city as possible so that no two can destroy each other. A configuration of blockhouses is legal provided that no two blockhouses are on the same horizontal row or vertical column in a map unless there is at least one wall separating them. In this problem we will consider small square cities (at most 4x4) that contain walls through which bullets cannot run through.&lt;br&gt;目标是使得城市中尽可能多的碉堡没有办法两两摧毁对方。配置碉堡的规定是：不能有两个碉堡在同一水平或垂直线上，除非至少有一堵墙隔开。在这个问题上我们只考虑小城市广场，最多4x4且含有子弹无法穿过的墙壁。&lt;/p&gt;
&lt;p&gt;The following image shows five pictures of the same board. The first picture is the empty board, the second and third pictures show legal configurations, and the fourth and fifth pictures show illegal configurations. For this board, the maximum number of blockhouses in a legal configuration is 5; the second picture shows one way to do it, but there are several other ways.&lt;br&gt;下图显示了同一个方块的五张图片。第一张图片是空的，第二和第三张图片是合法配置，而第四和第五张图片为非法配置。在这一大方块中，合法配置的碉堡的最大数目为5。第二张图片展示了一种方式，但也有一些其他的方法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/acm/zoj1002.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Your task is to write a program that, given a description of a map, calculates the maximum number of blockhouses that can be placed in the city in a legal configuration.&lt;br&gt;你的任务是编写一个程序,给定一个地图的描述,计算出最大数量的堡垒,可以放置在一个合法的配置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The input file contains one or more map descriptions, followed by a line containing the number 0 that signals the end of the file. Each map description begins with a line containing a positive integer n that is the size of the city; n will be at most 4. The next n lines each describe one row of the map, with a ‘.’ indicating an open space and an uppercase ‘X’ indicating a wall. There are no spaces in the input file.&lt;br&gt;输入文件包含一个或多个地图描述，最后一行的数字0表示输入结束。每个地图的第一行是一个正整数n，表示城市的规模；n最大为4。接下来的n行每行描述一个排的地图，“.”表示一个开放的空间，一个大写的“X”表示墙。输入文件中没有空格。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For each test case, output one line containing the maximum number of blockhouses that can be placed in the city in a legal configuration.&lt;br&gt;对于每一个测试案例，输出一行包含碉堡可以放置在该市的合法配置的最大数量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;样例输入&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;4
.X..
....
XX..
....
2
XX
.X
3
.X.
X.X
.X.
3
...
.XX
.XX
4
....
....
....
....
0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;样例输出&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;5
1
5
2
4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;自己翻译，水平有限……&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;算法思路&quot;&gt;&lt;a href=&quot;#算法思路&quot; class=&quot;headerlink&quot; title=&quot;算法思路&quot;&gt;&lt;/a&gt;算法思路&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;典型的广搜思路，与八皇后非常类似，DFS试一下，ac了……&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;算法实现&quot;&gt;&lt;a href=&quot;#算法实现&quot; class=&quot;headerlink&quot; title=&quot;算法实现&quot;&gt;&lt;/a&gt;算法实现&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,j,n,op;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; m[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//正方形城市最大为4*4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; r, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;//检查：上面以及左边有无碉堡 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=r; i&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--)&amp;#123;&lt;span class=&quot;comment&quot;&gt;//靠近自己开始搜，因为有可能有墙阻隔 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(m[i][c]==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; || m[i][c]==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(m[i][c]==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=c; i&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(m[r][i]==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; || m[r][i]==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(m[r][i]==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; now, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; r = now/n, c = now%n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(now==n*n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(sum&amp;gt;op) op = sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(m[r][c]==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(check(r,c))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			m[r][c] = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//标记&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			dfs(now+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,sum+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			m[r][c] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//反标记，广搜&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dfs(now+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,sum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;n; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j&amp;lt;n; j++)&amp;#123;&lt;span class=&quot;comment&quot;&gt;//转不转化为int数组其实无所谓……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(x==&lt;span class=&quot;number&quot;&gt;46&lt;/span&gt;) m[i][j]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; m[i][j]=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		op = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		dfs(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;op&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题目来源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;NYOJ 587-blockhouses &lt;a href=&quot;http://acm.nyist.net/JudgeOnline/problem.php?pid=587&quot;&gt;http://acm.nyist.net/JudgeOnline/problem.php?pid=587&lt;/a&gt;&lt;br&gt;ZOJ 1002-Fire Net &lt;a href=&quot;http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=1002&quot;&gt;http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=1002&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://www.gcusky.com/categories/ACM/"/>
    
    
      <category term="C++" scheme="http://www.gcusky.com/tags/C/"/>
    
      <category term="NYOJ" scheme="http://www.gcusky.com/tags/NYOJ/"/>
    
      <category term="ZOJ" scheme="http://www.gcusky.com/tags/ZOJ/"/>
    
      <category term="搜索" scheme="http://www.gcusky.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>花开不败</title>
    <link href="http://www.gcusky.com/2016/04/14/life/"/>
    <id>http://www.gcusky.com/2016/04/14/life/</id>
    <published>2016-04-14T14:25:28.000Z</published>
    <updated>2016-04-14T14:38:36.293Z</updated>
    
    <content type="html">&lt;p&gt;今晚，刷着ZOJ。却突然有感而发，暂缓吧，给自己个总结。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;因为上年在校内ACM得了一等奖，今年被拉去参加ACM省赛。&lt;br&gt;本来不想去的，也少了一队友（他准备考金融硕士）。&lt;br&gt;可另一个队友想去，就拉了一个人。&lt;br&gt;但说实在的，机会不大，毕竟……我的重心也放在考研上。&lt;/p&gt;
&lt;p&gt;上大学至今，做了几个重要的决定：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;加入校级组织-星空&lt;/li&gt;
&lt;li&gt;转专业&lt;/li&gt;
&lt;li&gt;MOOC自学&lt;/li&gt;
&lt;li&gt;参加数学建模&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;大一之前高考成绩出来时，知道自己错了，本来打算走3A再专插本的路线。&lt;br&gt;但父母最后决定让我上2B。&lt;br&gt;那时暑假，除了每天8、9甚至12个小时的暑假工，余下时间都在自学与规划。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;进入大学坚持做了2年勤工，加入技术为主的星空，且找准了自己的定位，做了几个总要的决定：&lt;br&gt;&lt;strong&gt;第一个重要决定&lt;/strong&gt;：从机械工程转到软件工程。&lt;br&gt;&lt;strong&gt;第二个重要决定&lt;/strong&gt;：在coursera等MOOC平台上自学，发现了更广阔的世界。&lt;br&gt;&lt;strong&gt;第三个重要决定&lt;/strong&gt;：参加数学建模竞赛，因此认识了一群伙伴，几乎整个学院的12、13级都由我们撑起来的感觉Orz……&lt;/p&gt;
&lt;p&gt;大学三年来，也不是没有迷茫过。也做错过很多事，并一味地道歉、逃避。&lt;br&gt;好在后面都反思清楚、想清楚，并存活至今，且做了&lt;strong&gt;第四个重要的决定&lt;/strong&gt;：&lt;code&gt;考研&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;虽然在校内顺风顺水的感觉，但其实出去还是很水。各种比赛出校就发现自己仅有的水平。&lt;br&gt;MOOC自学时发现优秀的人更加优秀，以及学校、平台所带来的眼界问题。&lt;br&gt;以前没有意识到，现在教育程度和视野眼界其实真的可以划上正比。&lt;br&gt;接触了两种极端的人，自然而然地非常想向好的那方面靠拢。&lt;br&gt;往前走往上走，离开了就不想再回去，看见更广阔的世界就不想再回去。&lt;/p&gt;
&lt;p&gt;在真正下决心之前投了几个大厂的简历都过筛选了，但后面的笔试和面试还是全部放下了。&lt;br&gt;毕竟在这种环境里生存了这么久，要简简单单地断断续续地后面再复习考研，幻想一蹴而就，不是那么容易的事。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;端正态度，分清战略与战术的区别。&lt;br&gt;同时想清楚自己不是为了考研而考研。&lt;br&gt;学英语的好处不用多说。&lt;br&gt;而数学的话可以为后面学机器学习相关理论打下数理基础。&lt;br&gt;嗯，开心就好~&lt;br&gt;以后优先考虑在广东发展，有目标的感觉真好：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;中山大学 - 数据科学与计算机学院&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;高考那时喜欢 &lt;strong&gt;花开不败&lt;/strong&gt; 这短词，现在还是这么喜欢。&lt;br&gt;曾经问自己万般努力只换一日盛开，有何意义？&lt;br&gt;其实，只是为了证明我来过这世上罢了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今晚，刷着ZOJ。却突然有感而发，暂缓吧，给自己个总结。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://www.gcusky.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>ZOJ 入门</title>
    <link href="http://www.gcusky.com/2016/04/13/acm-10/"/>
    <id>http://www.gcusky.com/2016/04/13/acm-10/</id>
    <published>2016-04-13T13:24:49.000Z</published>
    <updated>2016-04-19T13:46:45.834Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;以前只刷过南阳OJ，真正看实际意义上的ACM，还是输在英语上……&lt;/li&gt;
&lt;li&gt;没那么多时间分配在刷acm上，高数和英语绝不能停，只能晚上固定一两道，知足了……&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;ZOJ1037-Gridland&quot;&gt;&lt;a href=&quot;#ZOJ1037-Gridland&quot; class=&quot;headerlink&quot; title=&quot;ZOJ1037-Gridland&quot;&gt;&lt;/a&gt;ZOJ1037-Gridland&lt;/h2&gt;&lt;h3 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h3&gt;&lt;p&gt;这道题是水题，计算旅行商在全国城镇 $m*n$ 最短旅行的长度（回到出发点），只能走周围的点（包括倾斜 45°），假设水平垂直方向相邻的点的距离为1，则倾斜 45°相邻的点距离为1.41（保留小数点后两位）。&lt;br&gt;稍微举几个例子可以发现规律：只有 $m$ $n$ 均为奇数，走到最后需要走45°的路线回到出发点总距离最短。则有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$m$和$n$均为奇数时，总路程为 $m*n+0.41$&lt;/li&gt;
&lt;li&gt;其余情况的总路程为 $m*n$&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iomanip&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x,m,n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=x; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;m&amp;gt;&amp;gt;n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;Scenario #&quot;&lt;/span&gt;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;:&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((m&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;amp;&amp;amp;(n&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)) &lt;span class=&quot;comment&quot;&gt;//活用位操作符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;(m*n+&lt;span class=&quot;number&quot;&gt;0.41&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;setprecision(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&amp;lt;&amp;lt;fixed&amp;lt;&amp;lt;((&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)m*n)&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;ZOJ1048-Financial-Management&quot;&gt;&lt;a href=&quot;#ZOJ1048-Financial-Management&quot; class=&quot;headerlink&quot; title=&quot;ZOJ1048-Financial Management&quot;&gt;&lt;/a&gt;ZOJ1048-Financial Management&lt;/h2&gt;&lt;p&gt;更水，求平均数，当过下格式吧……&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(n--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;j;i=i+j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;$&quot;&lt;/span&gt;&amp;lt;&amp;lt;i/&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;以前只刷过南阳OJ，真正看实际意义上的ACM，还是输在英语上……&lt;/li&gt;
&lt;li&gt;没那么多时间分配在刷acm上，高数和英语绝不能停，只能晚上固定一两道，知足了……&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://www.gcusky.com/categories/ACM/"/>
    
    
      <category term="语言入门" scheme="http://www.gcusky.com/tags/%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/"/>
    
      <category term="C++" scheme="http://www.gcusky.com/tags/C/"/>
    
      <category term="ZOJ" scheme="http://www.gcusky.com/tags/ZOJ/"/>
    
  </entry>
  
  <entry>
    <title>GCUSKY_WIKI</title>
    <link href="http://www.gcusky.com/2016/03/25/wiki/"/>
    <id>http://www.gcusky.com/2016/03/25/wiki/</id>
    <published>2016-03-25T08:04:23.000Z</published>
    <updated>2016-05-01T09:51:31.283Z</updated>
    
    <content type="html">&lt;p&gt;整理了一些较为系统的知识点、内容。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;ACM练习&quot;&gt;&lt;a href=&quot;#ACM练习&quot; class=&quot;headerlink&quot; title=&quot;ACM练习&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://gcusky.com/categories/ACM/&quot; title=&quot;ACM练习&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ACM练习&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;算法练习，以 &lt;a href=&quot;http://acm.nyist.net/JudgeOnline/profile.php?userid=gcusky&quot; title=&quot;gcusky&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NYOJ&lt;/a&gt;、&lt;a href=&quot;http://acm.zju.edu.cn/onlinejudge/showUserStatus.do?userId=137605&quot; title=&quot;ZOJ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ZOJ&lt;/a&gt; 为主。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;HEXO折腾&quot;&gt;&lt;a href=&quot;#HEXO折腾&quot; class=&quot;headerlink&quot; title=&quot;HEXO折腾&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://gcusky.com/categories/hexo/&quot; title=&quot;HEXO整理&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HEXO折腾&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对目前使用hexo主题的一些小折腾以及hexo的相关配置问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;期刊阅览室&quot;&gt;&lt;a href=&quot;#期刊阅览室&quot; class=&quot;headerlink&quot; title=&quot;期刊阅览室&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://gcusky.com/categories/期刊阅览室/&quot; title=&quot;期刊阅览室&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;期刊阅览室&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;图书馆三楼期刊阅览室笔记及一些读书笔记、思维导图等内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
### [日语五十音][6]

- [沪江网校][7]自学课程，只是因兴趣而学的日语，希望早日脱离字幕看新番。
--&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;整理了一些较为系统的知识点、内容。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MySQL数据库索引问题</title>
    <link href="http://www.gcusky.com/2016/03/20/mysql-index/"/>
    <id>http://www.gcusky.com/2016/03/20/mysql-index/</id>
    <published>2016-03-20T13:36:40.000Z</published>
    <updated>2016-03-20T13:50:33.410Z</updated>
    
    <content type="html">&lt;p&gt;　　索引是快速搜索的关键。MySQL 索引的建立对于 MySQL 的高效运行是很重要的。下面介绍建立索引的基本知识和几种常见的 MySQL 索引类型。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;SQL-建立索引的原则&quot;&gt;&lt;a href=&quot;#SQL-建立索引的原则&quot; class=&quot;headerlink&quot; title=&quot;SQL 建立索引的原则&quot;&gt;&lt;/a&gt;SQL 建立索引的原则&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;定义主键的数据列一定要建立索引。&lt;/li&gt;
&lt;li&gt;定义有外键的数据列一定要建立索引。&lt;/li&gt;
&lt;li&gt;对于经常查询的数据列最好建立索引。&lt;/li&gt;
&lt;li&gt;对于需要在指定范围内的快速或频繁查询的数据列;&lt;/li&gt;
&lt;li&gt;经常用在WHERE子句中的数据列。&lt;/li&gt;
&lt;li&gt;经常出现在关键字order by、group by、distinct后面的字段，建立索引。如果建立的是复合索引，索引的字段顺序要和这些关键字后面的字段顺序一致，否则索引不会被使用。&lt;/li&gt;
&lt;li&gt;对于那些查询中很少涉及的列，重复值比较多的列不要建立索引。&lt;/li&gt;
&lt;li&gt;对于定义为text、image和bit的数据类型的列不要建立索引。&lt;/li&gt;
&lt;li&gt;对于经常存取的列避免建立索引 &lt;/li&gt;
&lt;li&gt;限制表上的索引数目。对一个存在大量更新操作的表，所建索引的数目一般不要超过3个，最多不要超过5个。索引虽说提高了访问速度，但太多索引会影响数据的更新操作。&lt;/li&gt;
&lt;li&gt;对复合索引，按照字段在查询条件中出现的频度建立索引。在复合索引中，记录首先按照第一个字段排序。对于在第一个字段上取值相同的记录，系统再按照第二个字段的取值排序，以此类推。因此只有复合索引的第一个字段出现在查询条件中，该索引才可能被使用,因此将应用频度高的字段，放置在复合索引的前面，会使系统最大可能地使用此索引，发挥索引的作用。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;常用的索引方法&quot;&gt;&lt;a href=&quot;#常用的索引方法&quot; class=&quot;headerlink&quot; title=&quot;常用的索引方法&quot;&gt;&lt;/a&gt;常用的索引方法&lt;/h2&gt;&lt;h3 id=&quot;B树（B-Tree-索引）&quot;&gt;&lt;a href=&quot;#B树（B-Tree-索引）&quot; class=&quot;headerlink&quot; title=&quot;B树（B-Tree 索引）&quot;&gt;&lt;/a&gt;B树（B-Tree 索引）&lt;/h3&gt;&lt;p&gt;　　B树（B tree）是一种以树的构造管理存储位置信息的方式。在B树中每个节点（node）可以有多个子数据，从而控制树的高度。因此，即使有很多数据，也可以很快地从根部找到存放地址。&lt;br&gt;　　B树中除根节点外，其他节点拥有的子数据最多为 $2n$ 个，最少为 $n$ 个。&lt;/p&gt;
&lt;h3 id=&quot;散列（Hash-索引）&quot;&gt;&lt;a href=&quot;#散列（Hash-索引）&quot; class=&quot;headerlink&quot; title=&quot;散列（Hash 索引）&quot;&gt;&lt;/a&gt;散列（Hash 索引）&lt;/h3&gt;&lt;p&gt;　　散列（hash）是对数据键值运用散列函数，求得存储地址的方法。散列用于”=”,”IN”和”&amp;lt;=&amp;gt;”这样的完全一致检索时功能强劲。但是，散列不适用比较条件检索和模糊检索。&lt;/p&gt;
&lt;h2 id=&quot;MySQL-选择索引的原则&quot;&gt;&lt;a href=&quot;#MySQL-选择索引的原则&quot; class=&quot;headerlink&quot; title=&quot;MySQL 选择索引的原则&quot;&gt;&lt;/a&gt;MySQL 选择索引的原则&lt;/h2&gt;&lt;h3 id=&quot;选择索引数据类型的原则&quot;&gt;&lt;a href=&quot;#选择索引数据类型的原则&quot; class=&quot;headerlink&quot; title=&quot;选择索引数据类型的原则&quot;&gt;&lt;/a&gt;选择索引数据类型的原则&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;越小的数据类型通常更好：越小的数据类型通常在磁盘、内存和CPU缓存中都需要更少的空间，处理起来更快。&lt;/li&gt;
&lt;li&gt;简单的数据类型更好：整型数据比起字符，处理开销更小，因为字符串的比较更复杂。在MySQL中，应该用内置的日期和时间数据类型，而不是用字符串来存储时间；以及用整型数据类型存储IP地址。&lt;/li&gt;
&lt;li&gt;尽量避免NULL：应该指定列为NOT NULL，除非你想存储NULL。在MySQL中，含有空值的列很难进行查询优化，因为它们使得索引、索引的统计信息以及比较运算更加复杂。你应该用0、一个特殊的值或者一个空串代替空值。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;选择标识符的原则&quot;&gt;&lt;a href=&quot;#选择标识符的原则&quot; class=&quot;headerlink&quot; title=&quot;选择标识符的原则&quot;&gt;&lt;/a&gt;选择标识符的原则&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;整型：通常是作为标识符的最好选择，因为可以更快的处理，而且可以设置为AUTO_INCREMENT。&lt;/li&gt;
&lt;li&gt;字符串：尽量避免使用字符串作为标识符，它们消耗更好的空间，处理起来也较慢。而且，通常来说，字符串都是随机的，所以它们在索引中的位置也是随机的，这会导致页面分裂、随机访问磁盘，聚簇索引分裂（对于使用聚簇索引的存储引擎）。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;一旦选定数据类型，应该保证所有相关的表都使用相同的数据类型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;MySQL-索引类型&quot;&gt;&lt;a href=&quot;#MySQL-索引类型&quot; class=&quot;headerlink&quot; title=&quot;MySQL 索引类型&quot;&gt;&lt;/a&gt;MySQL 索引类型&lt;/h3&gt;&lt;h4 id=&quot;普通索引（INDEX）&quot;&gt;&lt;a href=&quot;#普通索引（INDEX）&quot; class=&quot;headerlink&quot; title=&quot;普通索引（INDEX）&quot;&gt;&lt;/a&gt;普通索引（INDEX）&lt;/h4&gt;&lt;p&gt;　　这是最基本的索引，它没有任何限制。&lt;/p&gt;
&lt;h4 id=&quot;唯一索引（UNIQUE）&quot;&gt;&lt;a href=&quot;#唯一索引（UNIQUE）&quot; class=&quot;headerlink&quot; title=&quot;唯一索引（UNIQUE）&quot;&gt;&lt;/a&gt;唯一索引（UNIQUE）&lt;/h4&gt;&lt;p&gt;　　它与前面的普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值。如果是组合索引，则列值的组合必须唯一。&lt;/p&gt;
&lt;h4 id=&quot;主键索引（PRIMARY）&quot;&gt;&lt;a href=&quot;#主键索引（PRIMARY）&quot; class=&quot;headerlink&quot; title=&quot;主键索引（PRIMARY）&quot;&gt;&lt;/a&gt;主键索引（PRIMARY）&lt;/h4&gt;&lt;p&gt;　　它是一种特殊的唯一索引，不允许有空值。一般是在建表的时候同时创建主键索引。&lt;/p&gt;
&lt;h4 id=&quot;全文索引（FULLTEXT）&quot;&gt;&lt;a href=&quot;#全文索引（FULLTEXT）&quot; class=&quot;headerlink&quot; title=&quot;全文索引（FULLTEXT）&quot;&gt;&lt;/a&gt;全文索引（FULLTEXT）&lt;/h4&gt;&lt;p&gt;　　用来对大表的文本域(char，varchar，text)进行索引。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;其他详细资料及部分引用资料&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/AK2012/archive/2013/01/04/2844283.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SQL索引一步到位&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/hustcat/archive/2009/10/28/1591648.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;理解MySQL——索引与优化&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.php100.com/html/webkaifa/database/Mysql/2010/0409/4279.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL索引类型一览 让MySQL高效运行起来&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/vicenteforever/articles/1789613.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL的btree索引和hash索引的区别&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　索引是快速搜索的关键。MySQL 索引的建立对于 MySQL 的高效运行是很重要的。下面介绍建立索引的基本知识和几种常见的 MySQL 索引类型。&lt;/p&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="http://www.gcusky.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>NYOJ 488-素数环</title>
    <link href="http://www.gcusky.com/2016/03/18/acm-9/"/>
    <id>http://www.gcusky.com/2016/03/18/acm-9/</id>
    <published>2016-03-18T08:20:36.000Z</published>
    <updated>2016-04-19T11:48:59.788Z</updated>
    
    <content type="html">&lt;p&gt;时间限制：1000 ms  |  内存限制：65535 KB  |  难度：2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有一个整数n，把从1到n的数字无重复的排列成环，且使每相邻两个数（包括首尾）的和都为素数，称为素数环。&lt;br&gt;为了简便起见，我们规定每个素数环都从1开始。例如，下图就是6的一个素数环。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/acm/PrimeRing.gif&quot; alt=&quot;素数环&quot; title=&quot;素数环&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;输入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有多组测试数据，每组输入一个$n(0&amp;lt;n&amp;lt;20)，n=0$表示输入结束。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每组第一行输出对应的Case序号，从1开始。&lt;br&gt;如果存在满足题意叙述的素数环，从小到大输出。&lt;br&gt;否则输出No Answer。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;样例输入&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6&lt;br&gt;8&lt;br&gt;3&lt;br&gt;0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;样例输出&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Case 1:&lt;br&gt;1 4 3 2 5 6&lt;br&gt;1 6 5 2 3 4&lt;br&gt;Case 2:&lt;br&gt;1 2 3 8 5 6 7 4&lt;br&gt;1 2 5 8 3 4 7 6&lt;br&gt;1 4 7 6 5 8 3 2&lt;br&gt;1 6 7 4 3 8 5 2&lt;br&gt;Case 3:&lt;br&gt;No Answer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;题目来源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://acm.nyist.net/JudgeOnline/problem.php?pid=488&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://acm.nyist.net/JudgeOnline/problem.php?pid=488&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;算法思路&quot;&gt;&lt;a href=&quot;#算法思路&quot; class=&quot;headerlink&quot; title=&quot;算法思路&quot;&gt;&lt;/a&gt;算法思路&lt;/h3&gt;&lt;p&gt;这个素数环有n个位置，每个位置可以填写的整数为1~n，共n种可能，可以对每个位置从1开始进行试探，结束条件是正在试探的数满足如下条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;与已经填写到素数环中的整数不重复；&lt;/li&gt;
&lt;li&gt;与前面相邻的整数之和是一个素数；&lt;/li&gt;
&lt;li&gt;最后一个填写到的素数环中的整数与第一个填写的整数之和是一个素数。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在填写第k个位置时，如果满足上述约束条件，则继续填写第k+1个位置；如果1~n都无法填写到第k个位置，则取消对第k个位置的填写，回溯到第k-1个位置。&lt;/p&gt;
&lt;h3 id=&quot;算法实现&quot;&gt;&lt;a href=&quot;#算法实现&quot; class=&quot;headerlink&quot; title=&quot;算法实现&quot;&gt;&lt;/a&gt;算法实现&lt;/h3&gt;&lt;h4 id=&quot;程序1（只求出局部解）&quot;&gt;&lt;a href=&quot;#程序1（只求出局部解）&quot; class=&quot;headerlink&quot; title=&quot;程序1（只求出局部解）&quot;&gt;&lt;/a&gt;程序1（只求出局部解）&lt;/h4&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Prime&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;//判断整数x是否为素数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	n = (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;span class=&quot;built_in&quot;&gt;sqrt&lt;/span&gt;(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; i&amp;lt;=n; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(x%i==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Check&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;//判断位置k的填写是否满足约束条件 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; flag = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;k; i++)&lt;span class=&quot;comment&quot;&gt;//判断是否重复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a[i]==a[k]) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	flag = Prime(a[k]+a[k&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]);&lt;span class=&quot;comment&quot;&gt;//判断相邻数之和是否为素数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(flag==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; k==n&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//判断第一个和最后一个之和是否为素数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		flag = Prime(a[k]+a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; flag; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PrimeCircle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;//填写1~n共n个整数 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[n]; &lt;span class=&quot;comment&quot;&gt;//初始化数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;n; i++) a[i] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; k = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//指定第0个位置填写1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(k&amp;gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a[k] = a[k]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(a[k]&amp;lt;=n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(Check(k,n)==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//位置k可以填写整数a[k] &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; a[k] = a[k]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//试探下一个数 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a[k]&amp;lt;=n &amp;amp;&amp;amp; k==n&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&amp;#123;&lt;span class=&quot;comment&quot;&gt;//求解完毕，输出解 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;Case &quot;&lt;/span&gt;&amp;lt;&amp;lt;(num++)&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;: &quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;n; i++) &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;a[i]&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a[k]&amp;lt;=n &amp;amp;&amp;amp; k&amp;lt;n&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;) k = k+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//填写下一个位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; a[k--]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		PrimeCircle(n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;问题&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;并没有真正找到所有满足题意叙述的素数环，只是找到部分解而已。&lt;/li&gt;
&lt;li&gt;要真正找到所有解，应该加入一串标记，标记1~n哪些数被用过。&lt;/li&gt;
&lt;li&gt;对数组a使用了太多次的&lt;code&gt;new&lt;/code&gt;和&lt;code&gt;delete&lt;/code&gt;，最后可能超时。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;程序2（正确程序-）&quot;&gt;&lt;a href=&quot;#程序2（正确程序-）&quot; class=&quot;headerlink&quot; title=&quot;程序2（正确程序~）&quot;&gt;&lt;/a&gt;程序2（正确程序~）&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int n,flag,a[21],res[21];//res用来判断是否重复使用 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int Prime(int x)&amp;#123;//判断整数x是否为素数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if(x==1) return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for(int i=2; i&amp;lt;=x/2; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if(x%i==0) return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return 1; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void PrimeCircle(int now)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	int i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if(now==n&amp;amp;&amp;amp;Prime(a[n-1]+a[n]))&amp;#123;//求解完毕，输出解&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		flag = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for(i=0; i&amp;lt;n; i++) cout&amp;lt;&amp;lt;a[i]&amp;lt;&amp;lt;&quot; &quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cout&amp;lt;&amp;lt;endl; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for(i=2; i&amp;lt;=n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if(!res[i]&amp;amp;&amp;amp;Prime(i+a[now-1]))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				res[i] = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				a[now] = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				PrimeCircle(now+1);//一直递归下去，进行搜索 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				res[i] = 0;//无论是否搜索到，后续将回溯 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	int num = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	while(cin&amp;gt;&amp;gt;n,n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		flag = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a[0] = a[n] = 1;//最后一个数即为第一个数 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cout&amp;lt;&amp;lt;&quot;Case &quot;&amp;lt;&amp;lt;(num++)&amp;lt;&amp;lt;&quot;:&quot;&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if((n-1)&amp;amp;1||n==1)//(n-1)&amp;amp;1 表示n-1与1按位相与，判断n-1是否为奇数 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			PrimeCircle(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if(flag) cout&amp;lt;&amp;lt;&quot;No Answer&quot;&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;改进&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加入了res用来标记判断1~n哪些被重复使用；&lt;/li&gt;
&lt;li&gt;数组a固定长度，且最后一个数a[n]即为第一个数a[0]，只有这两个数重复，对后续判断有利。&lt;/li&gt;
&lt;li&gt;利用位操作符可以排除奇数个数n【因为只有奇数和偶数相加才会是素数， 所以总数为奇数的素数环，不可能存在】，对解空间树再剪枝，提高效率。&lt;/li&gt;
&lt;li&gt;活用递归搜索与res数组，才能找到所有的解。&lt;/li&gt;
&lt;li&gt;其实20以内两两相加的素数可以直接求出来，存为一串数组，效率将更高。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://item.jd.com/11214031.html&quot; title=&quot;算法设计与分析（第2版）&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;算法设计与分析（第2版）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://acm.nyist.net/JudgeOnline/code.php?runid=381387&quot; title=&quot;运行号：381387——刘玉涛&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;题目488优秀程序：运行号381387——刘玉涛&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;时间限制：1000 ms  |  内存限制：65535 KB  |  难度：2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有一个整数n，把从1到n的数字无重复的排列成环，且使每相邻两个数（包括首尾）的和都为素数，称为素数环。&lt;br&gt;为了简便起见，我们规定每个素数环都从1开始。例如，下图就是6的一个素数环。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cloud.gcusky.com/acm/PrimeRing.gif&quot; alt=&quot;素数环&quot; title=&quot;素数环&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://www.gcusky.com/categories/ACM/"/>
    
    
      <category term="C++" scheme="http://www.gcusky.com/tags/C/"/>
    
      <category term="NYOJ" scheme="http://www.gcusky.com/tags/NYOJ/"/>
    
      <category term="搜索" scheme="http://www.gcusky.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="回溯法" scheme="http://www.gcusky.com/tags/%E5%9B%9E%E6%BA%AF%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>NYOJ 106-背包问题</title>
    <link href="http://www.gcusky.com/2016/03/16/acm-8/"/>
    <id>http://www.gcusky.com/2016/03/16/acm-8/</id>
    <published>2016-03-16T08:14:40.000Z</published>
    <updated>2016-04-19T11:48:56.003Z</updated>
    
    <content type="html">&lt;p&gt;时间限制：3000 ms  |  内存限制：65535 KB  |  难度：3&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在有很多物品（它们是可以分割的），我们知道它们每个物品的单位重量的价值$v$和重量$w(1&amp;lt;=v,w&amp;lt;=10)$；如果给你一个背包它能容纳的重量为$m(10&amp;lt;=m&amp;lt;=20)$,你所要做的就是把物品装到背包里，使背包里的物品的价值总和最大。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;输入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第一行输入一个正整数$n(1&amp;lt;=n&amp;lt;=5)$,表示有n组测试数据；&lt;br&gt;随后有$n$测试数据，每组测试数据的第一行有两个正整数$s$，$m(1&amp;lt;=s&amp;lt;=10)$；$s$表示有$s$个物品。接下来的$s$行每行有两个正整数$v$，$w$。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;输出每组测试数据中背包内的物品的价值和，每次输出占一行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;样例输入&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1&lt;br&gt;3 15&lt;br&gt;5 10&lt;br&gt;2 8&lt;br&gt;3 9&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;样例输出&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;65&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;题目来源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://acm.nyist.net/JudgeOnline/problem.php?pid=106&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://acm.nyist.net/JudgeOnline/problem.php?pid=106&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;程序实现&quot;&gt;&lt;a href=&quot;#程序实现&quot; class=&quot;headerlink&quot; title=&quot;程序实现&quot;&gt;&lt;/a&gt;程序实现&lt;/h3&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//结构体加上sort的cmp条件,实现了对单位价值排序时,也同时排好对应的重量。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; P&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; v;&lt;span class=&quot;comment&quot;&gt;//单位重量的价值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; w;&lt;span class=&quot;comment&quot;&gt;//重量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;*a;&lt;span class=&quot;comment&quot;&gt;//需要多少再申请多少&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(P x, P y)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x.v&amp;gt;y.v;&lt;span class=&quot;comment&quot;&gt;//按照价值降序排列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,n,s,m,sum=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(n--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;s&amp;gt;&amp;gt;m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; P[s];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;s; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;a[i].v&amp;gt;&amp;gt;a[i].w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		sort(a,a+s,cmp); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;s; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a[i].w&amp;lt;=m)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				sum = sum + a[i].v*a[i].w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				m = m - a[i].w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				sum= sum + m*a[i].v;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//提前结束循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;sum&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; a;sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//释放空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;收获&quot;&gt;&lt;a href=&quot;#收获&quot; class=&quot;headerlink&quot; title=&quot;收获&quot;&gt;&lt;/a&gt;收获&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;这是个经典的背包问题，用贪心法就可以了。&lt;/li&gt;
&lt;li&gt;也学会了用结构体加上sort的cmp条件，实现了对一组数据排序时，顺便把对应的另一组数据也排了。之前&lt;a href=&quot;http://gcusky.com/2016/03/16/acm-7/&quot; title=&quot;会场安排问题&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;会场安排问题&lt;/a&gt;还是用两组数组分别来排的Orz。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;时间限制：3000 ms  |  内存限制：65535 KB  |  难度：3&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在有很多物品（它们是可以分割的），我们知道它们每个物品的单位重量的价值$v$和重量$w(1&amp;lt;=v,w&amp;lt;=10)$；如果给你一个背包它能容纳的重量为$m(10&amp;lt;=m&amp;lt;=20)$,你所要做的就是把物品装到背包里，使背包里的物品的价值总和最大。&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://www.gcusky.com/categories/ACM/"/>
    
    
      <category term="C++" scheme="http://www.gcusky.com/tags/C/"/>
    
      <category term="NYOJ" scheme="http://www.gcusky.com/tags/NYOJ/"/>
    
      <category term="贪心算法" scheme="http://www.gcusky.com/tags/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>NYOJ 14-会场安排问题</title>
    <link href="http://www.gcusky.com/2016/03/16/acm-7/"/>
    <id>http://www.gcusky.com/2016/03/16/acm-7/</id>
    <published>2016-03-16T08:13:37.000Z</published>
    <updated>2016-04-19T11:48:52.615Z</updated>
    
    <content type="html">&lt;p&gt;时间限制：3000 ms  |  内存限制：65535 KB  |  难度：4&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;学校的小礼堂每天都会有许多活动，有时间这些活动的计划时间会发生冲突，需要选择出一些活动进行举办。小刘的工作就是安排学校小礼堂的活动，每个时间最多安排一个活动。现在小刘有一些活动计划的时间表，他想尽可能的安排更多的活动，请问他该如何安排。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;输入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第一行是一个整型数 $m(m&amp;lt;100)$ 表示共有 $m$ 组测试数据。&lt;br&gt;每组测试数据的第一行是一个整数 $n(1&amp;lt;n&amp;lt;10000)$ 表示该测试数据共有$n$个活动。&lt;br&gt;随后的 $n$ 行，每行有两个正整数 $Bi$ , $Ei(0&amp;lt;=Bi,Ei&amp;lt;10000)$ ,分别表示第 $i$ 个活动的起始与结束时间 $(Bi&amp;lt;=Ei)$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于每一组输入，输出最多能够安排的活动数量。&lt;br&gt;每组的输出占一行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;样例输入&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2&lt;br&gt;2&lt;br&gt;1 10&lt;br&gt;10 11&lt;br&gt;3&lt;br&gt;1 10&lt;br&gt;10 11&lt;br&gt;11 20&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;样例输出&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1&lt;br&gt;2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;提示&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注意：如果上一个活动在 $t$ 时间结束，下一个活动最早应该在 $t+1$ 时间开始&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;题目来源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://acm.nyist.net/JudgeOnline/problem.php?pid=14&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://acm.nyist.net/JudgeOnline/problem.php?pid=14&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题思考：利用贪心法求解的题目&quot;&gt;&lt;a href=&quot;#问题思考：利用贪心法求解的题目&quot; class=&quot;headerlink&quot; title=&quot;问题思考：利用贪心法求解的题目&quot;&gt;&lt;/a&gt;问题思考：利用贪心法求解的题目&lt;/h3&gt;&lt;p&gt;贪心法求解活动安排问题的关键是如何选择贪心策略，使得按照一定的顺序选择相容活动，并能够安排尽量多的活动。至少有以下两种看似合理的贪心策略：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最早开始时间：这样可以增大资源的利用率。&lt;/li&gt;
&lt;li&gt;最早结束时间：这样可以使下一个活动尽早开始。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由于活动占用资源的时间没有限制，因此，后一种贪心选择更为合理。直观上，按这种策略选择相容活动可以为未安排的活动留下尽可能多的时间，也就是说，这种贪心选择的目的是使剩余时间段极大化，以便安排尽可能多的相容活动。&lt;br&gt;为了在每一次贪心选择时快速查找具有最早结束时间的相容活动，可以将$n$个活动按结束时间非减序排列。这样，贪心选择时取当前活动集合中结束时间最早的活动就归结为取当前活动集合中排列在最前面的活动。&lt;/p&gt;
&lt;h3 id=&quot;算法实现&quot;&gt;&lt;a href=&quot;#算法实现&quot; class=&quot;headerlink&quot; title=&quot;算法实现&quot;&gt;&lt;/a&gt;算法实现&lt;/h3&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *bi,*ei;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;same_sort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[],&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b[],&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//插入排序，算法复杂度O(n2) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;n&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;++i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; small=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j=i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;j&amp;lt;n;++j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a[j]&amp;lt;a[small])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                small=j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//同时交换相同位置 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        swap(a[small],a[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        swap(b[small],b[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ActiveManage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; s[],&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; f[],&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,j,count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; count = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;n; i++)&amp;#123;&lt;span class=&quot;comment&quot;&gt;// 依次考察每一个活动 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(s[i]&amp;gt;f[j])&amp;#123;&lt;span class=&quot;comment&quot;&gt;// 活动i与前一个最后结束的活动j相容 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			j = i;&lt;span class=&quot;comment&quot;&gt;// 安排活动i，j变为目前可以安排的最后一个活动 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; count;&lt;span class=&quot;comment&quot;&gt;// 返回已安排的活动个数 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; m,n,a,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(m--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		bi = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[n];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ei = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[n];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;a&amp;gt;&amp;gt;b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			bi[i] = a; ei[i] = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		same_sort(ei,bi,n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;ActiveManage(bi,ei,n)&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; bi,ei;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;主要是排序问题，一开始冒泡排序直接爆时间TimeLimitExceeded，并且上面的排序还可以再优化。&lt;/li&gt;
&lt;li&gt;本来打算用STL的multimap，毕竟键值对应，但不熟练语言特性算了Orz。&lt;/li&gt;
&lt;li&gt;后来想用类来实现，不过要对类内数据关联排序，后面有时间再实践这里总结出的问题吧。&lt;/li&gt;
&lt;li&gt;【2016-3-16更新】&lt;a href=&quot;http://gcusky.com/2016/03/16/acm-7/&quot; title=&quot;背包问题&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;背包问题&lt;/a&gt;里利用了结构体加上sort的cmp条件实现关联排序了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_59fabe0301010732.html&quot; title=&quot;map、multimaps函数&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;map、multimaps函数 – Canny&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000000602053&quot; title=&quot;初探STL之关联容器&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;初探STL之关联容器&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.dewen.net.cn/q/10725&quot; title=&quot;STL中的sort&amp;#40;&amp;#41;函数对一个数组排序要求保持对应关系&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;STL中的sort()函数对一个数组排序要求保持对应关系&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://gcusky.com/2016/03/16/acm-7/&quot; title=&quot;背包问题&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;算法设计与分析（第2版）&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;时间限制：3000 ms  |  内存限制：65535 KB  |  难度：4&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;学校的小礼堂每天都会有许多活动，有时间这些活动的计划时间会发生冲突，需要选择出一些活动进行举办。小刘的工作就是安排学校小礼堂的活动，每个时间最多安排一个活动。现在小刘有一些活动计划的时间表，他想尽可能的安排更多的活动，请问他该如何安排。&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://www.gcusky.com/categories/ACM/"/>
    
    
      <category term="C++" scheme="http://www.gcusky.com/tags/C/"/>
    
      <category term="NYOJ" scheme="http://www.gcusky.com/tags/NYOJ/"/>
    
      <category term="贪心算法" scheme="http://www.gcusky.com/tags/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
